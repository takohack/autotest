<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.10 on win32)" generated="20220211 15:53:04.392" rpa="false" schemaversion="2">
<suite id="s1" name="Papiserver" source="C:\Users\lilongyu\Desktop\autotest\papiserver">
<suite id="s1-s1" name="1.Pool相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\1.Pool相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:53:04.595" endtime="20220211 15:53:04.595"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:53:04.595" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:53:06.350" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 07:56:38 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:04.595" endtime="20220211 15:53:06.350"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:06.350" endtime="20220211 15:53:06.350"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:06.350" endtime="20220211 15:53:06.350"/>
</kw>
<status status="PASS" starttime="20220211 15:53:04.595" endtime="20220211 15:53:06.350"/>
</kw>
<test id="s1-s1-t1" name="XXX创建pool">
<kw name="Log" library="BuiltIn">
<arg>TODO</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:06.350" level="INFO">TODO</msg>
<status status="PASS" starttime="20220211 15:53:06.350" endtime="20220211 15:53:06.350"/>
</kw>
<status status="PASS" starttime="20220211 15:53:06.350" endtime="20220211 15:53:06.350"/>
</test>
<test id="s1-s1-t2" name="XXX删除pool">
<kw name="Log" library="BuiltIn">
<arg>TODO</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:06.366" level="INFO">TODO</msg>
<status status="PASS" starttime="20220211 15:53:06.366" endtime="20220211 15:53:06.366"/>
</kw>
<status status="PASS" starttime="20220211 15:53:06.350" endtime="20220211 15:53:06.366"/>
</test>
<test id="s1-s1-t3" name="获取单个pool信息">
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc":"2.0","method": "AddPool","id":"5fb21aae-251a-11e9-ab14-d663bd873d93","params":{"Name":"pool1","ConstructType":1,"Description":"","NodeNum":'1',"SasHotspareStrategy":"mid","SataHotspareStrategy":"mid","SsdHotspareStrategy":"mid","NodeInfoList":[{"NodeId":${node1myid},"DiskList":[${node1disk1},${node1disk2}]}]}}' http://127.0.0.1:9300/p_api/v1/pools</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:06.554" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc":"2.0","method": "AddPool","id":"5fb21aae-251a- 11e9-ab14-d663bd873d93","params":{"Name":"pool1","ConstructType":1,"Description" :"","NodeNum":'1',"SasHotspareStrategy":"mid","SataHotspareStrategy":"mid","SsdH otspareStrategy":"mid","NodeInfoList":[{"NodeId":3,"DiskList":["d01f8b5b-4eed-4b 7f-a4b1-b0ea4b7f241b","fd089f68-3c43-49bf-be3d-6d652d8edbd3"]}]}}' http://127.0. 0.1:9300/p_api/v1/pools</msg>
<status status="PASS" starttime="20220211 15:53:06.366" endtime="20220211 15:53:06.554"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:07.292" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 198

{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "error": {"code": -44139, "message": "disk already in pool or adding in pool: 'poolid(0) sn(d01f8b5b-4eed-4b7f-a4b1-b0ea4b7f241b)'"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:07.292" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 198

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:06.554" endtime="20220211 15:53:07.292"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/pools/0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:07.355" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/pools/0</msg>
<status status="PASS" starttime="20220211 15:53:07.292" endtime="20220211 15:53:07.355"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:07.778" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 2191

{"id": "25aac480-343d-4587-8bb3-21300efc841d", "jsonrpc": "2.0", "result": {"PoolId": 0, "Name": "pool0", "State": "IDLE", "Progress": -1, "Health": 0, "AssignType": "normal", "ReassignMode": "smart", "Mode": "SINGLE_NODE", "SwitchInfo": "NONE", "SwitchProgress": -1, "ScrubState": "DONE", "ScrubProgress": -1, "ScrubCycle": 43200, "Description": "Ffby", "NodeCount": 1, "AvailableNodeCount": 1, "DiskCount": 2, "TotalCapacity": 8191, "UsedCapacity": 97, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 8191, "UsedNormalCapacity": 97, "TierInfoList": [{"Tier": "SATA_HDD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 8191, "TierUsedCapacity": 97, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 8191, "TierUsedNormalCapacity": 97, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 2}, {"Tier": "SAS_HDD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 0, "TierUsedCapacity": 0, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 0, "TierUsedNormalCapacity": 0, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 0}, {"Tier": "NVMe_SSD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 0, "TierUsedCapacity": 0, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 0, "TierUsedNormalCapacity": 0, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 0}], "NodeInfoList": [{"NodeId": 3, "DiskList": [{"SerialNumber": "d01f8b5b-4eed-4b7f-a4b1-b0ea4b7f241b", "DiskType": "SAS_SSD", "Capacity": 4096, "AvailableCapacity": 4095, "UsedCapacity": 48, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 4095, "UsedNormalCapacity": 48, "RotationalSpeed": 0, "DiskStatus": "HEALTH", "DiskFreedProgress": -1}, {"SerialNumber": "fd089f68-3c43-49bf-be3d-6d652d8edbd3", "DiskType": "SAS_SSD", "Capacity": 4096, "AvailableCapacity": 4095, "UsedCapacity": 48, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 4095, "UsedNormalCapacity": 48, "RotationalSpeed": 0, "DiskStatus": "HEALTH", "DiskFreedProgress": -1}]}], "TotalVdiskNum": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:07.778" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 2191

{"id": "25aac480-343d-458...</msg>
<status status="PASS" starttime="20220211 15:53:07.355" endtime="20220211 15:53:07.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</kw>
<status status="PASS" starttime="20220211 15:53:06.366" endtime="20220211 15:53:07.778"/>
</test>
<test id="s1-s1-t4" name="XXXpool中添加磁盘">
<kw name="Log" library="BuiltIn">
<arg>TODO</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:07.778" level="INFO">TODO</msg>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</kw>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</test>
<test id="s1-s1-t5" name="XXXpool中删除磁盘">
<kw name="Log" library="BuiltIn">
<arg>TODO</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:07.778" level="INFO">TODO</msg>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</kw>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</test>
<test id="s1-s1-t6" name="修改pool">
<kw name="Generate Random String" library="String">
<var>${pool_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:07.778" level="INFO">${pool_name} = xQGA</msg>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.778"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetPool", "params": { "Description": "${pool_name}", "CapWarn": [ { "Tier": "SATA_HDD", "CapWarnStrategy": "mid" } ], "HotspareInfo": [ { "Tier": "SATA_HDD", "HotspareDiskNum": 0 } ] } }' http://127.0.0.1:9300/p_api/v1/pools/0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:07.965" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetPool", "params": { "Description": "xQGA", "CapWarn": [ { " Tier": "SATA_HDD", "CapWarnStrategy": "mid" } ], "HotspareInfo": [ { "Tier": "SA TA_HDD", "HotspareDiskNum": 0 } ] } }' http://127.0.0.1:9300/p_api/v1/pools/0</msg>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:07.965"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:08.419" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 89

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:08.419" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 89

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:53:07.965" endtime="20220211 15:53:08.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:08.419" endtime="20220211 15:53:08.419"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/pools/0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:08.544" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/pools/0</msg>
<status status="PASS" starttime="20220211 15:53:08.419" endtime="20220211 15:53:08.544"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:09.030" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 2191

{"id": "862ef526-020a-4cba-a1b9-d3eed060731e", "jsonrpc": "2.0", "result": {"PoolId": 0, "Name": "pool0", "State": "IDLE", "Progress": -1, "Health": 0, "AssignType": "normal", "ReassignMode": "smart", "Mode": "SINGLE_NODE", "SwitchInfo": "NONE", "SwitchProgress": -1, "ScrubState": "DONE", "ScrubProgress": -1, "ScrubCycle": 43200, "Description": "xQGA", "NodeCount": 1, "AvailableNodeCount": 1, "DiskCount": 2, "TotalCapacity": 8191, "UsedCapacity": 97, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 8191, "UsedNormalCapacity": 97, "TierInfoList": [{"Tier": "SATA_HDD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 8191, "TierUsedCapacity": 97, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 8191, "TierUsedNormalCapacity": 97, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 2}, {"Tier": "SAS_HDD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 0, "TierUsedCapacity": 0, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 0, "TierUsedNormalCapacity": 0, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 0}, {"Tier": "NVMe_SSD", "ExpectHotspareDiskNum": 0, "CurHotspareDiskNum": 0, "TierTotalCapacity": 0, "TierUsedCapacity": 0, "TierHotspareCapacity": 0, "TierUsedHotspareCapacity": 0, "TierNormalCapacity": 0, "TierUsedNormalCapacity": 0, "CapWarnStrategy": "mid", "HotspareStrategy": "mid", "DiskCount": 0}], "NodeInfoList": [{"NodeId": 3, "DiskList": [{"SerialNumber": "d01f8b5b-4eed-4b7f-a4b1-b0ea4b7f241b", "DiskType": "SAS_SSD", "Capacity": 4096, "AvailableCapacity": 4095, "UsedCapacity": 48, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 4095, "UsedNormalCapacity": 48, "RotationalSpeed": 0, "DiskStatus": "HEALTH", "DiskFreedProgress": -1}, {"SerialNumber": "fd089f68-3c43-49bf-be3d-6d652d8edbd3", "DiskType": "SAS_SSD", "Capacity": 4096, "AvailableCapacity": 4095, "UsedCapacity": 48, "HotspareCapacity": 0, "UsedHotspareCapacity": 0, "NormalCapacity": 4095, "UsedNormalCapacity": 48, "RotationalSpeed": 0, "DiskStatus": "HEALTH", "DiskFreedProgress": -1}]}], "TotalVdiskNum": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:09.030" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 2191

{"id": "862ef526-020a-4cb...</msg>
<status status="PASS" starttime="20220211 15:53:08.544" endtime="20220211 15:53:09.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${pool_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:09.030" endtime="20220211 15:53:09.030"/>
</kw>
<status status="PASS" starttime="20220211 15:53:07.778" endtime="20220211 15:53:09.030"/>
</test>
<test id="s1-s1-t7" name="查询Pool重构进度">
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/pools/0/poolreconstructschedule</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:09.170" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/pools/0/poolreconstructschedule</msg>
<status status="PASS" starttime="20220211 15:53:09.030" endtime="20220211 15:53:09.170"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:09.608" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 109

{"id": "2294ed85-0c77-4d40-bb92-964059faeb37", "jsonrpc": "2.0", "result": {"PoolReconstructSchedule": "-1"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:09.608" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 109

{"id": "2294ed85-0c77-4d40...</msg>
<status status="PASS" starttime="20220211 15:53:09.170" endtime="20220211 15:53:09.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:09.608" endtime="20220211 15:53:09.608"/>
</kw>
<status status="PASS" starttime="20220211 15:53:09.030" endtime="20220211 15:53:09.608"/>
</test>
<test id="s1-s1-t8" name="获取强制删除存储池的授权">
<kw name="Log" library="BuiltIn">
<arg>获取强制删除存储池授权码</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:09.608" level="INFO">获取强制删除存储池授权码</msg>
<status status="PASS" starttime="20220211 15:53:09.608" endtime="20220211 15:53:09.608"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"jsonrpc": "2.0","method": "GetForceDelPoolAuthCode","id": "5fb21aae-251a-11e9-ab14-d663bd873d93"}' http://127.0.0.1:9300/p_api/v1/pools/0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:09.734" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"jsonrpc": "2.0","method": "GetForceDelPoolAuthCode","id" : "5fb21aae-251a-11e9-ab14-d663bd873d93"}' http://127.0.0.1:9300/p_api/v1/pools/ 0</msg>
<status status="PASS" starttime="20220211 15:53:09.608" endtime="20220211 15:53:09.734"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:09.749" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 166

{"id": "4bc99155-2c78-4d32-bb2b-3076fd146234", "jsonrpc": "2.0", "result": {"PoolId": 0, "TimeStamp": 1644537525, "AuthCode": "452b3b3a-07f0-46f4-b54a-a10ab49786e8"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:09.749" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 166

{"id": "4bc99155-2c78-4d32...</msg>
<status status="PASS" starttime="20220211 15:53:09.734" endtime="20220211 15:53:09.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>AuthCode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:09.749"/>
</kw>
<status status="PASS" starttime="20220211 15:53:09.608" endtime="20220211 15:53:09.749"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:09.749"/>
</kw>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:09.749"/>
</kw>
<status status="PASS" starttime="20220211 15:53:04.423" endtime="20220211 15:53:09.749"/>
</suite>
<suite id="s1-s2" name="2.Vdisk相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\2.Vdisk相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:09.749"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:53:09.749" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:53:11.473" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 07:58:31 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:11.473"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:11.473"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:11.473"/>
</kw>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:11.473"/>
</kw>
<test id="s1-s2-t1" name="创建vdisk">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:11.473" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:11.473"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:11.473" level="INFO">${vdisk_name} = ekjk</msg>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:11.473"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:11.646" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "ekjk", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:11.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:11.646" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:53:11.646" endtime="20220211 15:53:11.646"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:13.432" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5ce6b1e2-8acd-11ec-8e0d-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:13.432" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5ce6b1e2-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:11.646" endtime="20220211 15:53:13.432"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:13.463" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:13.463" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:13.432" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:13.463" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:13.463" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:13.463" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:13.463" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:13.463" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:13.463" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:13.463" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<msg timestamp="20220211 15:53:13.463" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:53:11.646" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>******创建的vdiskid为 ${vdisk}----根据vdiskid查询信息********</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:13.463" level="INFO">******创建的vdiskid为 77----根据vdiskid查询信息********</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.463"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:13.588" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:13.463" endtime="20220211 15:53:13.588"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:14.027" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "dcb567cc-64cf-4747-8c65-e3cd8cc48a9e", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "ekjk", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:14.027" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "dcb567cc-64cf-4747...</msg>
<status status="PASS" starttime="20220211 15:53:13.588" endtime="20220211 15:53:14.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:14.027" endtime="20220211 15:53:14.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>******创建的vdiskname为 ${vdisk_name}----根据vdiskid查询信息********</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:14.027" level="INFO">******创建的vdiskname为 ekjk----根据vdiskid查询信息********</msg>
<status status="PASS" starttime="20220211 15:53:14.027" endtime="20220211 15:53:14.027"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVdiskByName", "params": { \ "PoolId": 0,"Name": "${vdisk_name}" }}' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:14.168" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVdiskByName", "params": {  "PoolId": 0,"Name": "ekjk" }}'  http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:14.027" endtime="20220211 15:53:14.168"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:14.872" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "d169029e-3fda-4c0a-af9f-edb4cd7a3061", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "ekjk", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:14.872" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "d169029e-3fda-4c0a...</msg>
<status status="PASS" starttime="20220211 15:53:14.168" endtime="20220211 15:53:14.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:14.872" endtime="20220211 15:53:14.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:14.872" endtime="20220211 15:53:14.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk(by id)</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:14.872" level="INFO">删除vdisk(by id)</msg>
<status status="PASS" starttime="20220211 15:53:14.872" endtime="20220211 15:53:14.872"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:15.028" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:14.872" endtime="20220211 15:53:15.028"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:17.850" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "c8c746fe-ddf8-4bef-9699-ffdd8db63fb9", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:17.850" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "c8c746fe-ddf8-4bef...</msg>
<status status="PASS" starttime="20220211 15:53:15.028" endtime="20220211 15:53:17.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:17.850" endtime="20220211 15:53:17.850"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:17.928" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:17.850" endtime="20220211 15:53:17.928"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:18.100" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "0f0801ca-cba4-4d5f-a805-2dec531cfa36", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:18.100" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:17.928" endtime="20220211 15:53:18.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</kw>
<status status="PASS" starttime="20220211 15:53:11.473" endtime="20220211 15:53:18.100"/>
</test>
<test id="s1-s2-t2" name="删除vdisk">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk用例已覆盖</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:18.100" level="INFO">创建vdisk用例已覆盖</msg>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</kw>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</test>
<test id="s1-s2-t3" name="根据id获取vdisk信息">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk用例已覆盖</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:18.100" level="INFO">创建vdisk用例已覆盖</msg>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</kw>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</test>
<test id="s1-s2-t4" name="根据name获取vdisk信息">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk用例已覆盖</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:18.100" level="INFO">创建vdisk用例已覆盖</msg>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.100"/>
</kw>
<status status="PASS" starttime="20220211 15:53:18.100" endtime="20220211 15:53:18.115"/>
</test>
<test id="s1-s2-t5" name="获取所有vdisk信息">
<kw name="Log" library="BuiltIn">
<arg>创建2个vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:18.115" level="INFO">创建2个vdisk</msg>
<status status="PASS" starttime="20220211 15:53:18.115" endtime="20220211 15:53:18.115"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:18.115" level="INFO">${vdisk_name} = 20Qo</msg>
<status status="PASS" starttime="20220211 15:53:18.115" endtime="20220211 15:53:18.115"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:18.242" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "20Qo", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:18.115" endtime="20220211 15:53:18.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:18.242" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:53:18.242" endtime="20220211 15:53:18.242"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk1}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:20.167" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "60dd263c-8acd-11ec-a7ef-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:20.167" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "60dd263c-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:18.242" endtime="20220211 15:53:20.167"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:20.182" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:20.182" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:20.167" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:20.182" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:20.182" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:20.182" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:20.182" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:20.182" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:20.182" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:20.182" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<msg timestamp="20220211 15:53:20.182" level="INFO">${vdisk1} = 77</msg>
<status status="PASS" starttime="20220211 15:53:18.242" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name2}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:20.182" level="INFO">${vdisk_name2} = VHSh</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.182"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name2}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:20.262" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "VHSh", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:20.182" endtime="20220211 15:53:20.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:20.262" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:53:20.262" endtime="20220211 15:53:20.262"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk2}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:21.986" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:47 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "6218ea2c-8acd-11ec-abf4-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:21.986" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:47 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "6218ea2c-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:20.262" endtime="20220211 15:53:21.986"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:22.032" level="INFO">result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<msg timestamp="20220211 15:53:22.032" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<status status="PASS" starttime="20220211 15:53:21.986" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:22.032" level="INFO">${output} = {"PoolId": 0, "VdiskId": 78}</msg>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:22.032" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:22.032" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:22.032" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 78} </msg>
<msg timestamp="20220211 15:53:22.032" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:22.032" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 78}</msg>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:22.032" level="INFO">${id} = 78</msg>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<msg timestamp="20220211 15:53:22.032" level="INFO">${vdisk2} = 78</msg>
<status status="PASS" starttime="20220211 15:53:20.262" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>命令中需要增加\，否则RF会失败</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.032"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/pools/0/vdisks?offset=${vdisk1}\\&amp;count=2</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:22.158" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/pools/0/vdisks?offset=77\&amp;count=2</msg>
<status status="PASS" starttime="20220211 15:53:22.032" endtime="20220211 15:53:22.158"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:23.160" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:48 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 638

{"id": "94c3ff14-539f-432d-916c-3d159e13f586", "jsonrpc": "2.0", "result": [{"PoolId": 0, "VdiskId": 77, "Name": "20Qo", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}], "TotalVdiskNum": 79}, {"PoolId": 0, "VdiskId": 78, "Name": "VHSh", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}], "TotalVdiskNum": 79}]}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:23.160" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:48 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 638

{"id": "94c3ff14-539f-432d...</msg>
<status status="PASS" starttime="20220211 15:53:22.158" endtime="20220211 15:53:23.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:23.160" endtime="20220211 15:53:23.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:23.160" endtime="20220211 15:53:23.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:23.160" endtime="20220211 15:53:23.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk1、2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:23.160" level="INFO">删除vdisk1、2</msg>
<status status="PASS" starttime="20220211 15:53:23.160" endtime="20220211 15:53:23.160"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk1}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:23.223" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:23.160" endtime="20220211 15:53:23.223"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:25.572" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "091b9c77-f66c-4513-81f8-d255e2246c89", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:25.572" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "091b9c77-f66c-4513...</msg>
<status status="PASS" starttime="20220211 15:53:23.223" endtime="20220211 15:53:25.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:25.572" endtime="20220211 15:53:25.572"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:25.698" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:25.572" endtime="20220211 15:53:25.698"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:28.563" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "9fb2590e-534b-429b-91d5-899ba85fae6e", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:28.563" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "9fb2590e-534b-429b...</msg>
<status status="PASS" starttime="20220211 15:53:25.698" endtime="20220211 15:53:28.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:28.563" endtime="20220211 15:53:28.563"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk1}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:28.673" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:28.563" endtime="20220211 15:53:28.673"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:28.704" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "06e917dd-0240-4ec0-bffe-09b86055b1e0", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:28.704" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:28.673" endtime="20220211 15:53:28.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:28.704" endtime="20220211 15:53:28.704"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:28.830" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:28.704" endtime="20220211 15:53:28.830"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:28.892" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "a6edd0dd-6942-4648-864d-da89bcc75821", "error": {"code": -44208, "message": "pool(0)/vdisk(78) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:28.892" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:28.830" endtime="20220211 15:53:28.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:28.892" endtime="20220211 15:53:28.923"/>
</kw>
<status status="PASS" starttime="20220211 15:53:18.115" endtime="20220211 15:53:28.923"/>
</test>
<test id="s1-s2-t6" name="修改vdisk">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:28.923" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:53:28.923" endtime="20220211 15:53:28.923"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:28.923" level="INFO">${vdisk_name} = BlC6</msg>
<status status="PASS" starttime="20220211 15:53:28.923" endtime="20220211 15:53:28.923"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:29.111" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "BlC6", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:28.923" endtime="20220211 15:53:29.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:29.111" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:53:29.111" endtime="20220211 15:53:29.111"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:30.820" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:56 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "674f2bf0-8acd-11ec-b7d1-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:30.820" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:56 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "674f2bf0-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:29.111" endtime="20220211 15:53:30.820"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:30.851" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:30.851" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:30.820" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:30.851" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:30.851" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:30.851" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:30.851" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:30.851" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:30.851" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:30.851" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:30.851" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:30.851" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:30.851" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:30.851" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:30.851" endtime="20220211 15:53:30.851"/>
</kw>
<msg timestamp="20220211 15:53:30.851" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:53:29.111" endtime="20220211 15:53:30.851"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetVdisk", "params": { "Name": "changed_name", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000 } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:31.212" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetVdisk", "params": { "Name": "changed_name", "TierInfoList" : [ { "Tier": "SATA_HDD", "Capacity": 1000 } ] } }' http://127.0.0.1:9300/p_api/ v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:30.866" endtime="20220211 15:53:31.212"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:31.870" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:57 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:31.870" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:57 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:53:31.212" endtime="20220211 15:53:31.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:31.870" endtime="20220211 15:53:31.870"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:31.997" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:31.870" endtime="20220211 15:53:31.997"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:32.622" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:58 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 342

{"id": "0980206c-23d1-4818-bb1d-3179f4b6f848", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "changed_name", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:32.622" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:58:58 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 342

{"id": "0980206c-23d1-4818...</msg>
<status status="PASS" starttime="20220211 15:53:31.997" endtime="20220211 15:53:32.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>changed_name</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:32.622" endtime="20220211 15:53:32.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:32.622" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:53:32.622" endtime="20220211 15:53:32.622"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:32.749" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:32.622" endtime="20220211 15:53:32.749"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:35.525" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "3bd6177c-8933-4b39-aee6-09834e016d25", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:35.525" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "3bd6177c-8933-4b39...</msg>
<status status="PASS" starttime="20220211 15:53:32.749" endtime="20220211 15:53:35.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:35.525" endtime="20220211 15:53:35.525"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:35.650" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:35.525" endtime="20220211 15:53:35.650"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:35.713" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "5f37ce50-3e4a-45a1-aea7-2655f2b1b2e3", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:35.713" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:35.650" endtime="20220211 15:53:35.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:35.713" endtime="20220211 15:53:35.713"/>
</kw>
<status status="PASS" starttime="20220211 15:53:28.923" endtime="20220211 15:53:35.713"/>
</test>
<test id="s1-s2-t7" name="查询指定vdisk的QoS策略">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:35.713" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:53:35.713" endtime="20220211 15:53:35.713"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:35.713" level="INFO">${vdisk_name} = Sy3o</msg>
<status status="PASS" starttime="20220211 15:53:35.713" endtime="20220211 15:53:35.713"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:35.791" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "Sy3o", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:35.713" endtime="20220211 15:53:35.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:35.791" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:53:35.791" endtime="20220211 15:53:35.791"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:37.672" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "6b5a59f4-8acd-11ec-8ab5-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:37.672" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "6b5a59f4-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:35.791" endtime="20220211 15:53:37.672"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:37.688" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:37.672" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:37.688" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:37.688" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:37.688" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:37.688" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<msg timestamp="20220211 15:53:37.688" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:53:35.791" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">创建QoS策略</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${qos_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:37.688" level="INFO">${qos_name} = jC5A</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.688"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":"2.0", "method":"AddQoSPolicy", "params": {"PolicyName":"${qos_name}", "IOPSLimit":3000, "IOPSReservation":0, "BandwidthLimit":0, "BandwidthReservation":0, "Priority":2 }}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:37.876" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":" 2.0", "method":"AddQoSPolicy", "params": {"PolicyName":"jC5A", "IOPSLimit":3000,  "IOPSReservation":0, "BandwidthLimit":0, "BandwidthReservation":0, "Priority":2  }}' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:53:37.688" endtime="20220211 15:53:37.876"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:37.923" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "jC5A"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:37.923" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:53:37.876" endtime="20220211 15:53:37.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:37.923" endtime="20220211 15:53:37.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>vdisk绑定QOS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:37.923" level="INFO">vdisk绑定QOS策略</msg>
<status status="PASS" starttime="20220211 15:53:37.923" endtime="20220211 15:53:37.923"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "BindQoSPolicy", "params": {"PolicyName": "${qos_name}", "PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:38.048" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "BindQoSPolicy", "params": {"PolicyName": "jC5A", "PoolId": 0,  "VdiskId": 77}}' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:53:37.923" endtime="20220211 15:53:38.048"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:38.581" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "PolicyName": "jC5A"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:38.581" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:53:38.048" endtime="20220211 15:53:38.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:38.581" endtime="20220211 15:53:38.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>查询指定vdisk的QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:38.581" level="INFO">查询指定vdisk的QoS策略</msg>
<status status="PASS" starttime="20220211 15:53:38.581" endtime="20220211 15:53:38.581"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetQoSPolicyByVdiskId", "params": {"PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:38.737" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetQoSPolicyByVdiskId", "params": {"PoolId": 0, "VdiskId": 77} }' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:53:38.581" endtime="20220211 15:53:38.737"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:39.050" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "jC5A", "Description": "", "IOPSLimit": 3000, "IOPSReservation": 0, "BandwidthLimit": 0, "BandwidthReservation": 0, "Priority": 2, "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:39.050" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:53:38.737" endtime="20220211 15:53:39.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:39.050" endtime="20220211 15:53:39.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>vdisk解除绑定QoS</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:39.050" level="INFO">vdisk解除绑定QoS</msg>
<status status="PASS" starttime="20220211 15:53:39.050" endtime="20220211 15:53:39.050"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H 'Content-Type: application/json' -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "UnbindQoSPolicy", "params": {"PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:39.222" level="INFO">curl -i -H 'Content-Type: applica tion/json' -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "UnbindQoSPolicy", "params": {"PoolId": 0, "VdiskId": 77}}' htt p://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:53:39.050" endtime="20220211 15:53:39.222"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:39.691" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:39.691" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:53:39.222" endtime="20220211 15:53:39.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:39.691" endtime="20220211 15:53:39.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:39.691" level="INFO">删除QoS策略</msg>
<status status="PASS" starttime="20220211 15:53:39.691" endtime="20220211 15:53:39.691"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteQoSPolicy", "params": {"PolicyName": "${qos_name}"}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:39.832" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc ": "2.0", "method": "DeleteQoSPolicy", "params": {"PolicyName": "jC5A"}}' http:/ /127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:53:39.691" endtime="20220211 15:53:39.832"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:39.941" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "jC5A"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:39.941" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:53:39.832" endtime="20220211 15:53:39.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:39.941" endtime="20220211 15:53:39.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:39.941" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:53:39.941" endtime="20220211 15:53:39.941"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:40.082" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:39.941" endtime="20220211 15:53:40.082"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:42.502" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:08 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "99e010ff-a3d6-4f4d-a2c2-8feeeb40df39", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:42.502" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:08 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "99e010ff-a3d6-4f4d...</msg>
<status status="PASS" starttime="20220211 15:53:40.082" endtime="20220211 15:53:42.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:42.502" endtime="20220211 15:53:42.502"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:42.627" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:42.502" endtime="20220211 15:53:42.627"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:42.722" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:08 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "01a27bde-851d-49b7-82bb-f988cbcff458", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:42.722" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:08 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:42.627" endtime="20220211 15:53:42.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:42.722" endtime="20220211 15:53:42.722"/>
</kw>
<status status="PASS" starttime="20220211 15:53:35.713" endtime="20220211 15:53:42.722"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:53:42.722" endtime="20220211 15:53:42.722"/>
</kw>
<status status="PASS" starttime="20220211 15:53:42.722" endtime="20220211 15:53:42.722"/>
</kw>
<status status="PASS" starttime="20220211 15:53:09.749" endtime="20220211 15:53:42.722"/>
</suite>
<suite id="s1-s3" name="3.Journal相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\3.Journal相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:53:42.737" endtime="20220211 15:53:42.753"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:53:42.753" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:53:44.591" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 07:58:36 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:42.753" endtime="20220211 15:53:44.591"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:44.591"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:44.591"/>
</kw>
<status status="PASS" starttime="20220211 15:53:42.737" endtime="20220211 15:53:44.591"/>
</kw>
<test id="s1-s3-t1" name="恢复指定vdisk的镜像">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:44.591" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:44.591"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:44.591" level="INFO">${vdisk_name} = knav</msg>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:44.591"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:44.732" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "knav", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:44.732"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:46.780" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "70a62096-8acd-11ec-813e-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:46.780" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "70a62096-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:44.732" endtime="20220211 15:53:46.780"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:46.810" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:46.810" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:46.780" endtime="20220211 15:53:46.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:46.810" endtime="20220211 15:53:46.810"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:46.811" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:46.810" endtime="20220211 15:53:46.811"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:46.811" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:46.811" endtime="20220211 15:53:46.811"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:46.811" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:46.813" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:46.813" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:46.813" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:46.811" endtime="20220211 15:53:46.813"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:46.813" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:46.813" endtime="20220211 15:53:46.813"/>
</kw>
<msg timestamp="20220211 15:53:46.813" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:53:44.732" endtime="20220211 15:53:46.813"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:46.945" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:46.814" endtime="20220211 15:53:46.945"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:47.444" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:13 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "d9fcfb43-0154-44a1-be43-e09865bdb2c2", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "knav", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:47.444" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:13 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "d9fcfb43-0154-44a1...</msg>
<status status="PASS" starttime="20220211 15:53:46.946" endtime="20220211 15:53:47.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:47.445" endtime="20220211 15:53:47.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>恢复指定vdisk的镜像</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:47.446" level="INFO">恢复指定vdisk的镜像</msg>
<status status="PASS" starttime="20220211 15:53:47.446" endtime="20220211 15:53:47.446"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"RepairVdiskJournal","params":{"PoolId":0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/journals</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:47.580" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"RepairVdiskJournal","params":{"PoolId":0,"VdiskId":77}}' http://12 7.0.0.1:9300/p_api/v1/journals</msg>
<status status="PASS" starttime="20220211 15:53:47.446" endtime="20220211 15:53:47.580"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:48.451" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:48.451" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:47.580" endtime="20220211 15:53:48.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:48.452" endtime="20220211 15:53:48.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>获取镜像到指定节点的vdisk列表</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:48.453" level="INFO">获取镜像到指定节点的vdisk列表</msg>
<status status="PASS" starttime="20220211 15:53:48.453" endtime="20220211 15:53:48.453"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/journals/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:48.589" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/journals/1</msg>
<status status="PASS" starttime="20220211 15:53:48.453" endtime="20220211 15:53:48.590"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:49.753" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:15 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"jsonrpc": "2.0", "id": "f09f09d1-f524-41d0-bff7-379920365f49", "result": {"NodeId": 1, "TotalVdiskNum": 0, "VdiskList": []}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:49.753" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:15 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:48.590" endtime="20220211 15:53:49.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:49.754" endtime="20220211 15:53:49.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:49.755" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:53:49.755" endtime="20220211 15:53:49.755"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:49.814" level="INFO">curl -i -X DELETE http://127.0.0. 1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:49.755" endtime="20220211 15:53:49.814"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:51.765" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "2447c49d-f410-4e63-997a-355c49a1aa05", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:51.765" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "2447c49d-f410-4e63...</msg>
<status status="PASS" starttime="20220211 15:53:49.814" endtime="20220211 15:53:51.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:51.765" endtime="20220211 15:53:51.765"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:51.887" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:51.765" endtime="20220211 15:53:51.887"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:51.925" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "cef64711-3677-4f8a-a948-a0ebc444844c", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:51.925" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:51.887" endtime="20220211 15:53:51.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:53:51.925"/>
</kw>
<status status="PASS" starttime="20220211 15:53:44.591" endtime="20220211 15:53:51.925"/>
</test>
<test id="s1-s3-t2" name="查询镜像到指定节点的vdisk列表">
<kw name="Log" library="BuiltIn">
<arg>复用恢复指定vdisk的镜像的用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:51.925" level="INFO">复用恢复指定vdisk的镜像的用例</msg>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:53:51.925"/>
</kw>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:53:51.925"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:53:51.925"/>
</kw>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:53:51.925"/>
</kw>
<status status="PASS" starttime="20220211 15:53:42.737" endtime="20220211 15:53:51.925"/>
</suite>
<suite id="s1-s4" name="4.卷相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\4.卷相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:53:51.935" endtime="20220211 15:53:51.935"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:53:51.935" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:53:53.705" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 07:59:09 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:51.935" endtime="20220211 15:53:53.705"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:53.705" endtime="20220211 15:53:53.706"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:53:53.706" endtime="20220211 15:53:53.706"/>
</kw>
<status status="PASS" starttime="20220211 15:53:51.935" endtime="20220211 15:53:53.706"/>
</kw>
<test id="s1-s4-t1" name="创建卷">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:53.707" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:53:53.707" endtime="20220211 15:53:53.707"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:53.708" level="INFO">${vdisk_name} = Pc1D</msg>
<status status="PASS" starttime="20220211 15:53:53.707" endtime="20220211 15:53:53.708"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:53.870" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "Pc1D", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:53:53.708" endtime="20220211 15:53:53.870"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:55.670" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7613e180-8acd-11ec-97ec-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:55.670" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7613e180-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:53:53.871" endtime="20220211 15:53:55.670"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:55.700" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:53:55.700" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:53:55.670" endtime="20220211 15:53:55.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:55.700" endtime="20220211 15:53:55.701"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:55.701" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:53:55.701" endtime="20220211 15:53:55.701"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:55.702" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:55.701" endtime="20220211 15:53:55.702"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:55.703" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:55.703" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:53:55.703" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:55.704" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:53:55.702" endtime="20220211 15:53:55.704"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:55.704" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:53:55.704" endtime="20220211 15:53:55.704"/>
</kw>
<msg timestamp="20220211 15:53:55.704" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:53:53.871" endtime="20220211 15:53:55.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:55.705" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:53:55.704" endtime="20220211 15:53:55.705"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${lun_name}</var>
<arg>5</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:53:55.705" level="INFO">${lun_name} = LjwmO</msg>
<status status="PASS" starttime="20220211 15:53:55.705" endtime="20220211 15:53:55.705"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "${lun_name}", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:55.881" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "LjwmO", "Deduplication": fals e, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc", " Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:53:55.705" endtime="20220211 15:53:55.881"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:57.363" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "60f2a950-700a-4429-a4ad-2c8498ac11b8", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:53:57.363" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "60f2a950-700a-4429...</msg>
<status status="PASS" starttime="20220211 15:53:55.881" endtime="20220211 15:53:57.363"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:53:57.377" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "LjwmO"}}[</msg>
<msg timestamp="20220211 15:53:57.377" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "LjwmO"}}[</msg>
<status status="PASS" starttime="20220211 15:53:57.364" endtime="20220211 15:53:57.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:57.377" endtime="20220211 15:53:57.377"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:53:57.378" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "LjwmO"}</msg>
<status status="PASS" starttime="20220211 15:53:57.377" endtime="20220211 15:53:57.378"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:57.378" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:57.378" endtime="20220211 15:53:57.378"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:53:57.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:57.380" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "LjwmO"} </msg>
<msg timestamp="20220211 15:53:57.380" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:53:57.380" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'LjwmO'}</msg>
<status status="PASS" starttime="20220211 15:53:57.378" endtime="20220211 15:53:57.380"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:53:57.380" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:53:57.380" endtime="20220211 15:53:57.380"/>
</kw>
<msg timestamp="20220211 15:53:57.380" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:53:55.881" endtime="20220211 15:53:57.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:57.381" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:53:57.381" endtime="20220211 15:53:57.381"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:57.502" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:53:57.382" endtime="20220211 15:53:57.502"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:59.273" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:24 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "8ddb8244-4105-4a65-9a37-87a36726601a", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:59.273" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:24 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "8ddb8244-4105-4a65...</msg>
<status status="PASS" starttime="20220211 15:53:57.502" endtime="20220211 15:53:59.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:59.274" endtime="20220211 15:53:59.274"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:59.405" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:53:59.275" endtime="20220211 15:53:59.405"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:59.568" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "e9a1b8ff-8a77-4a46-8f80-279179e56572", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:59.568" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:53:59.405" endtime="20220211 15:53:59.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:59.569" endtime="20220211 15:53:59.570"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:59.686" level="INFO">curl  -X GET http://127.0.0.1:930 0/p_api/v1/vdisks/77/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:59.570" endtime="20220211 15:53:59.686"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:53:59.791" level="INFO">{"id": "3d0fdb93-e343-4d06-8825-b9aa1bd098d6", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:53:59.791" level="INFO">${output} = {"id": "3d0fdb93-e343-4d06-8825-b9aa1bd098d6", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:53:59.687" endtime="20220211 15:53:59.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:59.792" endtime="20220211 15:53:59.792"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${lun_name}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:53:59.793" endtime="20220211 15:53:59.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:53:59.794" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:53:59.794" endtime="20220211 15:53:59.794"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:53:59.853" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:53:59.795" endtime="20220211 15:53:59.853"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:01.991" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "25845cdc-101e-409c-830a-e1b7e104e3f4", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:01.991" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "25845cdc-101e-409c...</msg>
<status status="PASS" starttime="20220211 15:53:59.854" endtime="20220211 15:54:01.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:01.991" endtime="20220211 15:54:01.991"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:02.117" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:01.991" endtime="20220211 15:54:02.117"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:02.195" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "850c6728-05e9-48a2-ba2e-6958fef13855", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:02.195" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:02.117" endtime="20220211 15:54:02.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:02.196" endtime="20220211 15:54:02.196"/>
</kw>
<status status="PASS" starttime="20220211 15:53:53.706" endtime="20220211 15:54:02.197"/>
</test>
<test id="s1-s4-t2" name="删除卷">
<kw name="Log" library="BuiltIn">
<arg>复用创建vdisk用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:02.198" level="INFO">复用创建vdisk用例</msg>
<status status="PASS" starttime="20220211 15:54:02.198" endtime="20220211 15:54:02.198"/>
</kw>
<status status="PASS" starttime="20220211 15:54:02.197" endtime="20220211 15:54:02.199"/>
</test>
<test id="s1-s4-t3" name="扩容卷">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:02.200" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:54:02.200" endtime="20220211 15:54:02.200"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:02.201" level="INFO">${vdisk_name} = 5laL</msg>
<status status="PASS" starttime="20220211 15:54:02.201" endtime="20220211 15:54:02.201"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:02.367" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "5laL", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:54:02.201" endtime="20220211 15:54:02.367"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:04.257" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7b23a26e-8acd-11ec-928c-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:04.257" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7b23a26e-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:54:02.367" endtime="20220211 15:54:04.257"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:54:04.305" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:54:04.257" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:04.305" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:04.305" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:54:04.305" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:04.305" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<msg timestamp="20220211 15:54:04.305" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:54:02.367" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${lun_name}</var>
<arg>5</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:04.305" level="INFO">${lun_name} = FztPv</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.305"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "${lun_name}", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:04.445" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "FztPv", "Deduplication": fals e, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc", " Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:54:04.305" endtime="20220211 15:54:04.445"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:05.466" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "7c236367-48af-4696-83af-4de8104d6e90", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:05.466" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "7c236367-48af-4696...</msg>
<status status="PASS" starttime="20220211 15:54:04.445" endtime="20220211 15:54:05.466"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:05.482" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "FztPv"}}[</msg>
<msg timestamp="20220211 15:54:05.482" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "FztPv"}}[</msg>
<status status="PASS" starttime="20220211 15:54:05.466" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:05.482" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "FztPv"}</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:05.482" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:05.482" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:05.482" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "FztPv"} </msg>
<msg timestamp="20220211 15:54:05.482" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:05.482" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'FztPv'}</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:05.482" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<msg timestamp="20220211 15:54:05.482" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:54:04.445" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>扩容卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:05.482" level="INFO">扩容卷</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.482"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"ResizeVolume","params":{"PoolId": 0,"VdiskId":${vdisk},"Size":200}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:05.607" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"ResizeVolume","params":{"PoolId": 0,"VdiskId":77,"Size":200}}' http ://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:05.482" endtime="20220211 15:54:05.607"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:07.156" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 139

{"id": "ae7147b8-b060-469f-8c91-7c3ba8dec227", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "LogicalSize": 200}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:07.156" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 139

{"id": "ae7147b8-b060-469f...</msg>
<status status="PASS" starttime="20220211 15:54:05.607" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>log</arg>
<arg>缩容卷，还不支持，不测试</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>write</arg>
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"ResizeVolume","params":{"PoolId": 0,"VdiskId":${vdisk},"Size":50}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>${output}</arg>
<arg>Read Until Prompt</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>should contain</arg>
<arg>${output}</arg>
<arg>result</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:07.156" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.156"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:07.289" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:07.156" endtime="20220211 15:54:07.289"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:08.523" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "e1bb96f7-f46f-4030-8d9a-aaacaa4af2c2", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:08.523" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "e1bb96f7-f46f-4030...</msg>
<status status="PASS" starttime="20220211 15:54:07.289" endtime="20220211 15:54:08.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:08.523" endtime="20220211 15:54:08.523"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:08.678" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:08.523" endtime="20220211 15:54:08.678"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:08.678" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "feac1f56-5c92-4677-8b37-48b50c44f0d8", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:08.678" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:34 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:08.678" endtime="20220211 15:54:08.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:08.678" endtime="20220211 15:54:08.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:08.678" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:54:08.678" endtime="20220211 15:54:08.678"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:08.788" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:08.678" endtime="20220211 15:54:08.788"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:10.941" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "d7b594bc-c8cc-4873-acb4-72c9ee327cef", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:10.941" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "d7b594bc-c8cc-4873...</msg>
<status status="PASS" starttime="20220211 15:54:08.788" endtime="20220211 15:54:10.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:10.941" endtime="20220211 15:54:10.942"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:11.002" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:10.942" endtime="20220211 15:54:11.002"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:11.094" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "b0384501-e004-46ac-b825-de3d537a1f38", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:11.094" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:11.002" endtime="20220211 15:54:11.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:11.094" endtime="20220211 15:54:11.095"/>
</kw>
<status status="PASS" starttime="20220211 15:54:02.200" endtime="20220211 15:54:11.095"/>
</test>
<test id="s1-s4-t4" name="获取vdisk下所有卷信息">
<kw name="Log" library="BuiltIn">
<arg>复用创建vdisk用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:11.098" level="INFO">复用创建vdisk用例</msg>
<status status="PASS" starttime="20220211 15:54:11.097" endtime="20220211 15:54:11.098"/>
</kw>
<status status="PASS" starttime="20220211 15:54:11.097" endtime="20220211 15:54:11.099"/>
</test>
<test id="s1-s4-t5" name="获取单个卷信息">
<kw name="Log" library="BuiltIn">
<arg>复用创建vdisk用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:11.101" level="INFO">复用创建vdisk用例</msg>
<status status="PASS" starttime="20220211 15:54:11.101" endtime="20220211 15:54:11.101"/>
</kw>
<status status="PASS" starttime="20220211 15:54:11.100" endtime="20220211 15:54:11.101"/>
</test>
<test id="s1-s4-t6" name="创建快照">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:11.103" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:54:11.102" endtime="20220211 15:54:11.103"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:11.103" level="INFO">${vdisk_name} = KH7M</msg>
<status status="PASS" starttime="20220211 15:54:11.103" endtime="20220211 15:54:11.103"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:11.233" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "KH7M", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:54:11.103" endtime="20220211 15:54:11.234"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:12.726" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:38 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "8071e6c2-8acd-11ec-a404-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:12.726" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:38 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "8071e6c2-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:54:11.235" endtime="20220211 15:54:12.726"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:12.739" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:54:12.739" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:54:12.726" endtime="20220211 15:54:12.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:12.739" endtime="20220211 15:54:12.740"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:12.740" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:54:12.740" endtime="20220211 15:54:12.740"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:12.741" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:12.740" endtime="20220211 15:54:12.741"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:12.741" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:12.743" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:54:12.743" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:12.743" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:54:12.741" endtime="20220211 15:54:12.743"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:12.743" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:54:12.743" endtime="20220211 15:54:12.743"/>
</kw>
<msg timestamp="20220211 15:54:12.744" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:54:11.234" endtime="20220211 15:54:12.744"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:12.862" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:12.744" endtime="20220211 15:54:12.862"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:13.482" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "5acb4491-1aab-44eb-be20-94700b7a5822", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "KH7M", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:13.482" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "5acb4491-1aab-44eb...</msg>
<status status="PASS" starttime="20220211 15:54:12.863" endtime="20220211 15:54:13.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:13.483" endtime="20220211 15:54:13.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:13.484" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:54:13.484" endtime="20220211 15:54:13.484"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:13.620" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication":  false, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc ", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:54:13.484" endtime="20220211 15:54:13.620"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:14.510" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "61aac869-7344-4ce3-90e7-ed899f3819d9", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:14.510" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "61aac869-7344-4ce3...</msg>
<status status="PASS" starttime="20220211 15:54:13.621" endtime="20220211 15:54:14.510"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:14.553" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<msg timestamp="20220211 15:54:14.553" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<status status="PASS" starttime="20220211 15:54:14.510" endtime="20220211 15:54:14.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:14.553" endtime="20220211 15:54:14.554"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:14.554" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}</msg>
<status status="PASS" starttime="20220211 15:54:14.554" endtime="20220211 15:54:14.554"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:14.555" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:14.554" endtime="20220211 15:54:14.555"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:14.555" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:14.556" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"} </msg>
<msg timestamp="20220211 15:54:14.556" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:14.556" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'vol0-test'}</msg>
<status status="PASS" starttime="20220211 15:54:14.555" endtime="20220211 15:54:14.556"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:14.556" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:54:14.556" endtime="20220211 15:54:14.556"/>
</kw>
<msg timestamp="20220211 15:54:14.557" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:54:13.621" endtime="20220211 15:54:14.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:14.557" level="INFO">创建快照</msg>
<status status="PASS" starttime="20220211 15:54:14.557" endtime="20220211 15:54:14.557"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk}, "ReadOnly":true,"Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:14.678" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":77, "ReadOnly":true," Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/ v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:54:14.558" endtime="20220211 15:54:14.678"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:16.047" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:41 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "f7e02980-497e-4fb8-8aaa-4127be0012f6", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1, "Name": "snapshot1"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:16.047" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:41 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "f7e02980-497e-4fb8...</msg>
<status status="PASS" starttime="20220211 15:54:14.678" endtime="20220211 15:54:16.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:16.047" endtime="20220211 15:54:16.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:16.049" level="INFO">删除快照</msg>
<status status="PASS" starttime="20220211 15:54:16.049" endtime="20220211 15:54:16.049"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:16.125" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": 77}}' h ttp://127.0.0.1:9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:54:16.050" endtime="20220211 15:54:16.125"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:17.849" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "9ffcac7c-c87a-473e-aa52-fd91a3a43233", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:17.850" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "9ffcac7c-c87a-473e...</msg>
<status status="PASS" starttime="20220211 15:54:16.126" endtime="20220211 15:54:17.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:17.851" endtime="20220211 15:54:17.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>获取快照信息</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:17.855" level="INFO">获取快照信息</msg>
<status status="PASS" starttime="20220211 15:54:17.854" endtime="20220211 15:54:17.855"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"GetSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:18.000" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"GetSnapshot","params":{"PoolId": 0,"VdiskId":77}}' http://127.0.0.1 :9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:54:17.856" endtime="20220211 15:54:18.000"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:18.096" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 156

{"jsonrpc": "2.0", "id": "7311082f-648f-4f39-827c-f1d851b1c243", "error": {"code": -42034, "message": "pool(0)/vdisk(77)/volume(0)/snapshot(1) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:18.096" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 156

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:18.001" endtime="20220211 15:54:18.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:18.097" endtime="20220211 15:54:18.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>获取指定卷下快照信息</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:18.098" level="INFO">获取指定卷下快照信息</msg>
<status status="PASS" starttime="20220211 15:54:18.097" endtime="20220211 15:54:18.098"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"GetSnapshots","params":{"PoolId": 0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:18.231" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"GetSnapshots","params":{"PoolId": 0,"VdiskId":77}}' http://127.0.0. 1:9300/p_api/v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:54:18.098" endtime="20220211 15:54:18.232"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:18.351" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"id": "f52ad6a5-d690-4b67-9e19-8ace7a0ad275", "jsonrpc": "2.0", "result": []}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:18.351" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"id": "f52ad6a5-d690-4b67-...</msg>
<status status="PASS" starttime="20220211 15:54:18.232" endtime="20220211 15:54:18.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:18.352" endtime="20220211 15:54:18.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:18.353" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:54:18.353" endtime="20220211 15:54:18.353"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:18.474" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:18.354" endtime="20220211 15:54:18.474"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:19.892" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "4ad9dcd0-d290-4494-a862-949d78666f78", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:19.892" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "4ad9dcd0-d290-4494...</msg>
<status status="PASS" starttime="20220211 15:54:18.475" endtime="20220211 15:54:19.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:19.892" endtime="20220211 15:54:19.892"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:20.017" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:19.892" endtime="20220211 15:54:20.017"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:20.111" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "ec630f07-7724-47b3-a0d7-bdf072462d41", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:20.111" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:20.017" endtime="20220211 15:54:20.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:20.111" endtime="20220211 15:54:20.111"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:20.220" level="INFO">curl  -X GET  http://127.0.0.1:93 00/p_api/v1/vdisks/77/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:20.111" endtime="20220211 15:54:20.220"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:20.339" level="INFO">{"id": "04ceb0a2-f484-419a-9b86-2def270907a3", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:20.339" level="INFO">${output} = {"id": "04ceb0a2-f484-419a-9b86-2def270907a3", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:20.220" endtime="20220211 15:54:20.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:20.339" endtime="20220211 15:54:20.339"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:20.339" endtime="20220211 15:54:20.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:20.339" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:54:20.339" endtime="20220211 15:54:20.339"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:20.449" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:20.339" endtime="20220211 15:54:20.449"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:23.519" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "137304f0-8df0-4a50-8853-c887cfc9ad26", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:23.519" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "137304f0-8df0-4a50...</msg>
<status status="PASS" starttime="20220211 15:54:20.449" endtime="20220211 15:54:23.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:23.519" endtime="20220211 15:54:23.519"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:23.628" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:23.519" endtime="20220211 15:54:23.628"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:23.707" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "81c00623-3708-4702-9764-58ec8e34ea3a", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:23.707" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:23.628" endtime="20220211 15:54:23.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</kw>
<status status="PASS" starttime="20220211 15:54:11.102" endtime="20220211 15:54:23.707"/>
</test>
<test id="s1-s4-t7" name="删除快照">
<kw name="Log" library="BuiltIn">
<arg>复用创建快照用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:23.707" level="INFO">复用创建快照用例</msg>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</kw>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</test>
<test id="s1-s4-t8" name="获取快照信息">
<kw name="Log" library="BuiltIn">
<arg>复用创建快照用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:23.707" level="INFO">复用创建快照用例</msg>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</kw>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</test>
<test id="s1-s4-t9" name="启动快照回滚">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:23.707" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:23.707" level="INFO">${vdisk_name} = ZbYu</msg>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.707"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:23.848" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "ZbYu", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:23.848"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:25.960" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "87f89972-8acd-11ec-8aae-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:25.960" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "87f89972-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:54:23.848" endtime="20220211 15:54:25.960"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:25.974" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:54:25.974" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:54:25.960" endtime="20220211 15:54:25.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:25.974" endtime="20220211 15:54:25.975"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:25.975" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:54:25.975" endtime="20220211 15:54:25.975"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:25.976" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:25.975" endtime="20220211 15:54:25.976"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:25.976" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:25.977" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:54:25.977" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:25.978" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:54:25.976" endtime="20220211 15:54:25.978"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:25.978" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:54:25.978" endtime="20220211 15:54:25.978"/>
</kw>
<msg timestamp="20220211 15:54:25.978" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:54:23.848" endtime="20220211 15:54:25.978"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:26.104" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:25.979" endtime="20220211 15:54:26.104"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:26.828" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:52 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "bb5c1cdb-7b57-40a4-be14-acc811b0ad41", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "ZbYu", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:26.828" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:52 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "bb5c1cdb-7b57-40a4...</msg>
<status status="PASS" starttime="20220211 15:54:26.104" endtime="20220211 15:54:26.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:26.829" endtime="20220211 15:54:26.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:26.830" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:54:26.830" endtime="20220211 15:54:26.830"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:26.984" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication":  false, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc ", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:54:26.830" endtime="20220211 15:54:26.984"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:29.020" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "6d36bbed-2cd8-4e45-b22a-ccdc47fb539a", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:29.020" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:54 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "6d36bbed-2cd8-4e45...</msg>
<status status="PASS" starttime="20220211 15:54:26.987" endtime="20220211 15:54:29.020"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:29.034" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<msg timestamp="20220211 15:54:29.034" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<status status="PASS" starttime="20220211 15:54:29.021" endtime="20220211 15:54:29.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:29.035" endtime="20220211 15:54:29.035"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:29.035" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}</msg>
<status status="PASS" starttime="20220211 15:54:29.035" endtime="20220211 15:54:29.035"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:29.036" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:29.035" endtime="20220211 15:54:29.036"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:29.036" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:29.037" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"} </msg>
<msg timestamp="20220211 15:54:29.037" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:29.037" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'vol0-test'}</msg>
<status status="PASS" starttime="20220211 15:54:29.036" endtime="20220211 15:54:29.037"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:29.037" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:54:29.037" endtime="20220211 15:54:29.037"/>
</kw>
<msg timestamp="20220211 15:54:29.037" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:54:26.986" endtime="20220211 15:54:29.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:29.038" level="INFO">创建快照</msg>
<status status="PASS" starttime="20220211 15:54:29.038" endtime="20220211 15:54:29.038"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk}, "ReadOnly":true,"Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:29.158" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":77, "ReadOnly":true," Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/ v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:54:29.038" endtime="20220211 15:54:29.158"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:30.615" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:56 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "5d316396-e0c1-4517-b82c-0a10fec2fd01", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1, "Name": "snapshot1"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:30.616" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:56 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "5d316396-e0c1-4517...</msg>
<status status="PASS" starttime="20220211 15:54:29.158" endtime="20220211 15:54:30.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:30.616" endtime="20220211 15:54:30.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>启动快照回滚</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:30.617" level="INFO">启动快照回滚</msg>
<status status="PASS" starttime="20220211 15:54:30.617" endtime="20220211 15:54:30.617"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"RollbackSnapshot","params":{"PoolId":0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:30.745" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"RollbackSnapshot","params":{"PoolId":0,"VdiskId":77}}' http://127.0 .0.1:9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:54:30.618" endtime="20220211 15:54:30.745"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:33.798" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:59 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "e6df659f-93e5-40f7-a7a3-5e9215e7d65e", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:33.798" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Thu, 10 Feb 2022 23:59:59 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "e6df659f-93e5-40f7...</msg>
<status status="PASS" starttime="20220211 15:54:30.745" endtime="20220211 15:54:33.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:33.799" endtime="20220211 15:54:33.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>终止快照回滚</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:33.800" level="INFO">终止快照回滚</msg>
<status status="PASS" starttime="20220211 15:54:33.800" endtime="20220211 15:54:33.800"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"StopRollback","params":{"PoolId":0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:34.010" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"StopRollback","params":{"PoolId":0,"VdiskId":77}}' http://127.0.0.1 :9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:33.800" endtime="20220211 15:54:34.010"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:34.689" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:00 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 187

{"jsonrpc": "2.0", "id": "ee0e1a99-7780-4248-8a58-683cce364f69", "error": {"code": -45643, "message": "stop pool(0)/vdisk(77)/volume(0) rollback failed for volume already stop rollback"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:34.689" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:00 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 187

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:34.011" endtime="20220211 15:54:34.689"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>终止快照回滚结果判断TODO</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:34.690" endtime="20220211 15:54:34.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:34.691" level="INFO">删除快照</msg>
<status status="PASS" starttime="20220211 15:54:34.690" endtime="20220211 15:54:34.691"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:34.805" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": 77}}' h ttp://127.0.0.1:9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:54:34.691" endtime="20220211 15:54:34.805"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:36.516" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:02 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "e004f7cd-4091-45eb-8874-9fc13696b810", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:36.516" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:02 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "e004f7cd-4091-45eb...</msg>
<status status="PASS" starttime="20220211 15:54:34.806" endtime="20220211 15:54:36.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:36.517" endtime="20220211 15:54:36.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>获取快照信息</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:36.517" level="INFO">获取快照信息</msg>
<status status="PASS" starttime="20220211 15:54:36.517" endtime="20220211 15:54:36.518"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"GetSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:36.637" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"GetSnapshot","params":{"PoolId": 0,"VdiskId":77}}' http://127.0.0.1 :9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:54:36.518" endtime="20220211 15:54:36.638"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:37.152" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:02 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 156

{"jsonrpc": "2.0", "id": "461a3ed1-fc16-43d8-be99-93eb8464d9a0", "error": {"code": -42034, "message": "pool(0)/vdisk(77)/volume(0)/snapshot(1) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:37.152" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:02 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 156

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:36.638" endtime="20220211 15:54:37.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:37.153" endtime="20220211 15:54:37.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>获取指定卷下快照信息</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:37.154" level="INFO">获取指定卷下快照信息</msg>
<status status="PASS" starttime="20220211 15:54:37.154" endtime="20220211 15:54:37.154"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"GetSnapshots","params":{"PoolId": 0,"VdiskId":${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:37.273" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"GetSnapshots","params":{"PoolId": 0,"VdiskId":77}}' http://127.0.0. 1:9300/p_api/v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:54:37.154" endtime="20220211 15:54:37.273"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:37.409" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"id": "ad95ffb5-e82a-4e4a-ab40-28121005a41a", "jsonrpc": "2.0", "result": []}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:37.409" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"id": "ad95ffb5-e82a-4e4a-...</msg>
<status status="PASS" starttime="20220211 15:54:37.274" endtime="20220211 15:54:37.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:37.409" endtime="20220211 15:54:37.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:37.409" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:54:37.409" endtime="20220211 15:54:37.409"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:37.599" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:37.409" endtime="20220211 15:54:37.599"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:39.305" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "fe32beef-6618-4879-9bb4-0df8be47c561", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:39.305" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:04 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "fe32beef-6618-4879...</msg>
<status status="PASS" starttime="20220211 15:54:37.599" endtime="20220211 15:54:39.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:39.306" endtime="20220211 15:54:39.306"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:39.379" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:39.307" endtime="20220211 15:54:39.379"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:39.500" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "d3eb8382-1bd6-4591-a5a7-4e6fe351865a", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:39.500" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:05 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:39.379" endtime="20220211 15:54:39.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:39.501" endtime="20220211 15:54:39.501"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:39.560" level="INFO">curl  -X GET  http://127.0.0.1:93 00/p_api/v1/vdisks/77/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:39.502" endtime="20220211 15:54:39.560"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:39.742" level="INFO">{"id": "02a3d3a6-e86a-4012-a002-025960fe5861", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:39.742" level="INFO">${output} = {"id": "02a3d3a6-e86a-4012-a002-025960fe5861", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:39.561" endtime="20220211 15:54:39.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:39.743" endtime="20220211 15:54:39.743"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:39.743" endtime="20220211 15:54:39.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:39.744" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:54:39.744" endtime="20220211 15:54:39.744"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:40.168" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:39.744" endtime="20220211 15:54:40.169"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:41.925" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "3537af7d-b375-4571-89d3-45fd193980a3", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:41.926" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "3537af7d-b375-4571...</msg>
<status status="PASS" starttime="20220211 15:54:40.169" endtime="20220211 15:54:41.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:41.926" endtime="20220211 15:54:41.926"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:42.093" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:41.927" endtime="20220211 15:54:42.093"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:42.098" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "6e6e12b4-1d22-4074-acd7-0cf8e7f6a757", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:42.098" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:42.094" endtime="20220211 15:54:42.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:42.099" endtime="20220211 15:54:42.099"/>
</kw>
<status status="PASS" starttime="20220211 15:54:23.707" endtime="20220211 15:54:42.100"/>
</test>
<test id="s1-s4-t10" name="终止快照回滚">
<kw name="Log" library="BuiltIn">
<arg>复用启动快照回滚用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:42.103" level="INFO">复用启动快照回滚用例</msg>
<status status="PASS" starttime="20220211 15:54:42.102" endtime="20220211 15:54:42.103"/>
</kw>
<status status="PASS" starttime="20220211 15:54:42.101" endtime="20220211 15:54:42.103"/>
</test>
<test id="s1-s4-t11" name="获取指定卷下快照信息">
<kw name="Log" library="BuiltIn">
<arg>复用创建快照用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:42.105" level="INFO">复用创建快照用例</msg>
<status status="PASS" starttime="20220211 15:54:42.105" endtime="20220211 15:54:42.105"/>
</kw>
<status status="PASS" starttime="20220211 15:54:42.104" endtime="20220211 15:54:42.106"/>
</test>
<test id="s1-s4-t12" name="启动卷拷贝">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:42.107" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:54:42.107" endtime="20220211 15:54:42.108"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk1_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:42.108" level="INFO">${vdisk1_name} = Rvc7</msg>
<status status="PASS" starttime="20220211 15:54:42.108" endtime="20220211 15:54:42.108"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk1_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:42.380" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "Rvc7", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:54:42.109" endtime="20220211 15:54:42.380"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:44.126" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:09 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "92ec6ca0-8acd-11ec-a23a-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:44.126" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:09 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "92ec6ca0-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:54:42.381" endtime="20220211 15:54:44.126"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:44.170" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:54:44.170" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:54:44.126" endtime="20220211 15:54:44.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:44.170" endtime="20220211 15:54:44.170"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:44.171" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:54:44.170" endtime="20220211 15:54:44.171"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:44.171" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:44.171" endtime="20220211 15:54:44.171"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:44.171" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:44.172" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:54:44.172" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:44.172" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:54:44.171" endtime="20220211 15:54:44.172"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:44.172" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:54:44.172" endtime="20220211 15:54:44.172"/>
</kw>
<msg timestamp="20220211 15:54:44.172" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:54:42.381" endtime="20220211 15:54:44.172"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:44.350" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:44.173" endtime="20220211 15:54:44.350"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:44.813" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:10 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "14caf7cb-5d02-498a-a9e6-28638ad0ef30", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "Rvc7", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:44.813" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:10 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "14caf7cb-5d02-498a...</msg>
<status status="PASS" starttime="20220211 15:54:44.350" endtime="20220211 15:54:44.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk1_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:44.814" endtime="20220211 15:54:44.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:44.815" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:54:44.815" endtime="20220211 15:54:44.815"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:45.011" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication":  false, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc ", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:54:44.815" endtime="20220211 15:54:45.011"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:46.387" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "dec4a788-51d5-4893-9e9d-54c008a07303", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:46.387" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "dec4a788-51d5-4893...</msg>
<status status="PASS" starttime="20220211 15:54:45.013" endtime="20220211 15:54:46.387"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:46.416" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<msg timestamp="20220211 15:54:46.416" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<status status="PASS" starttime="20220211 15:54:46.387" endtime="20220211 15:54:46.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:46.417" endtime="20220211 15:54:46.417"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:46.417" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}</msg>
<status status="PASS" starttime="20220211 15:54:46.417" endtime="20220211 15:54:46.417"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:46.418" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:46.417" endtime="20220211 15:54:46.418"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:46.418" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:46.419" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"} </msg>
<msg timestamp="20220211 15:54:46.419" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:46.419" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'vol0-test'}</msg>
<status status="PASS" starttime="20220211 15:54:46.418" endtime="20220211 15:54:46.419"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:46.419" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:54:46.419" endtime="20220211 15:54:46.419"/>
</kw>
<msg timestamp="20220211 15:54:46.419" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:54:45.012" endtime="20220211 15:54:46.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建vdisk2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:46.420" level="INFO">创建vdisk2</msg>
<status status="PASS" starttime="20220211 15:54:46.420" endtime="20220211 15:54:46.420"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk2_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:54:46.421" level="INFO">${vdisk2_name} = P6gR</msg>
<status status="PASS" starttime="20220211 15:54:46.420" endtime="20220211 15:54:46.421"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddVdisk","params":{"PoolId":0,"Name":"${vdisk2_name}","Description":"desc","TierInfoList":[{"Tier":"SATA_HDD","Capacity":1000,"EcType":"CARBON_2B"}]}}' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:46.493" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddVdisk","params":{"PoolId":0,"Name":"P6gR","Description":"desc", "TierInfoList":[{"Tier":"SATA_HDD","Capacity":1000,"EcType":"CARBON_2B"}]}}' htt p://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:54:46.421" endtime="20220211 15:54:46.493"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk2}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:48.570" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "957eddd6-8acd-11ec-813e-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:48.570" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "957eddd6-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:54:46.493" endtime="20220211 15:54:48.570"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:48.601" level="INFO">result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<msg timestamp="20220211 15:54:48.601" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<status status="PASS" starttime="20220211 15:54:48.570" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:48.601" level="INFO">${output} = {"PoolId": 0, "VdiskId": 78}</msg>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:48.601" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:48.601" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:48.601" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 78} </msg>
<msg timestamp="20220211 15:54:48.601" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:48.601" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 78}</msg>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:48.601" level="INFO">${id} = 78</msg>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.601"/>
</kw>
<msg timestamp="20220211 15:54:48.601" level="INFO">${vdisk2} = 78</msg>
<status status="PASS" starttime="20220211 15:54:46.493" endtime="20220211 15:54:48.601"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:48.728" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:48.601" endtime="20220211 15:54:48.728"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:49.367" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:15 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 337

{"id": "aba289bc-18a7-4540-bc59-6cbe40256028", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "Name": "P6gR", "Description": "desc", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "CARBON_2B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:49.367" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:15 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 337

{"id": "aba289bc-18a7-4540...</msg>
<status status="PASS" starttime="20220211 15:54:48.728" endtime="20220211 15:54:49.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk2_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:49.367" endtime="20220211 15:54:49.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:49.367" level="INFO">创建卷2</msg>
<status status="PASS" starttime="20220211 15:54:49.367" endtime="20220211 15:54:49.367"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test2", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk2}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:49.592" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test2", "Deduplication":  false, "PoolId": 0,"VdiskId": 78, "Compress": false, "Description": "vdisk1 des c", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:54:49.367" endtime="20220211 15:54:49.592"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid2}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:50.635" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:16 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 141

{"id": "079c480e-4621-493a-a621-9f865654e0b3", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:54:50.635" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:16 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 141

{"id": "079c480e-4621-493a...</msg>
<status status="PASS" starttime="20220211 15:54:49.594" endtime="20220211 15:54:50.635"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:54:50.664" level="INFO">result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}}[</msg>
<msg timestamp="20220211 15:54:50.664" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}}[</msg>
<status status="PASS" starttime="20220211 15:54:50.635" endtime="20220211 15:54:50.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:50.664" endtime="20220211 15:54:50.664"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:54:50.665" level="INFO">${output} = {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}</msg>
<status status="PASS" starttime="20220211 15:54:50.664" endtime="20220211 15:54:50.665"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:50.665" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:50.665" endtime="20220211 15:54:50.665"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:54:50.665" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:50.666" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"} </msg>
<msg timestamp="20220211 15:54:50.666" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:54:50.666" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 78, 'VolumeId': 0, 'Name': 'vol0-test2'}</msg>
<status status="PASS" starttime="20220211 15:54:50.665" endtime="20220211 15:54:50.666"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:54:50.666" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:54:50.666" endtime="20220211 15:54:50.666"/>
</kw>
<msg timestamp="20220211 15:54:50.667" level="INFO">${volid2} = 0</msg>
<status status="PASS" starttime="20220211 15:54:49.593" endtime="20220211 15:54:50.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>启动卷拷贝</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:50.667" level="INFO">启动卷拷贝</msg>
<status status="PASS" starttime="20220211 15:54:50.667" endtime="20220211 15:54:50.667"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"StartVolumeCopy","params":{"PoolId":0,"VdiskId":${vdisk2},"SourcePoolId":0,"SourceVdiskId":${vdisk},"SourceVolumeId":${volid},"CopyType":0}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:50.794" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"StartVolumeCopy","params":{"PoolId":0,"VdiskId":78,"SourcePoolId":0 ,"SourceVdiskId":77,"SourceVolumeId":0,"CopyType":0}}' http://127.0.0.1:9300/p_a pi/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:50.668" endtime="20220211 15:54:50.794"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:53.542" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:19 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 180

{"id": "86d904f3-c906-4ccd-9a89-7603c72bb1e4", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "SourcePoolId": 0, "SourceVdiskId": 77, "SourceVolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:53.542" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:19 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 180

{"id": "86d904f3-c906-4ccd...</msg>
<status status="PASS" starttime="20220211 15:54:50.794" endtime="20220211 15:54:53.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:53.543" endtime="20220211 15:54:53.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>终止卷拷贝</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:53.544" level="INFO">终止卷拷贝</msg>
<status status="PASS" starttime="20220211 15:54:53.544" endtime="20220211 15:54:53.544"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"StopVolumeCopy","params":{"PoolId":0,"VdiskId":${vdisk2}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:53.665" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"StopVolumeCopy","params":{"PoolId":0,"VdiskId":78}}' http://127.0.0 .1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:53.544" endtime="20220211 15:54:53.666"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:53.965" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:19 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 179

{"jsonrpc": "2.0", "id": "11c438db-8ca6-4a83-88cb-d9683a404a73", "error": {"code": -45644, "message": "stop pool(0)/vdisk(78)/volume(0) copy failed for volume already stop copy"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:53.965" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:19 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 179

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:53.666" endtime="20220211 15:54:53.965"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>判断终止卷拷贝TODO</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:54:53.965" endtime="20220211 15:54:53.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:53.967" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:54:53.966" endtime="20220211 15:54:53.967"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:54.040" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:53.967" endtime="20220211 15:54:54.040"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:55.572" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "a61b50c1-6929-4eb8-97fa-bd1b0922e491", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:55.572" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "a61b50c1-6929-4eb8...</msg>
<status status="PASS" starttime="20220211 15:54:54.041" endtime="20220211 15:54:55.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:55.573" endtime="20220211 15:54:55.573"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:55.710" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:55.574" endtime="20220211 15:54:55.710"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:55.861" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "0d2b6131-c2de-4b49-a64c-698c746be36b", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:55.861" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:55.711" endtime="20220211 15:54:55.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:55.862" endtime="20220211 15:54:55.862"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:55.967" level="INFO">curl  -X GET http://127.0.0.1:930 0/p_api/v1/vdisks/77/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:55.863" endtime="20220211 15:54:55.967"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:56.167" level="INFO">{"id": "3ee4b201-e2d0-494e-8adf-10d36b783567", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:56.167" level="INFO">${output} = {"id": "3ee4b201-e2d0-494e-8adf-10d36b783567", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:54:55.968" endtime="20220211 15:54:56.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:56.168" endtime="20220211 15:54:56.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:56.169" endtime="20220211 15:54:56.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:56.169" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:54:56.169" endtime="20220211 15:54:56.169"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:56.289" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:56.170" endtime="20220211 15:54:56.289"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:59.599" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "4679afd9-87f9-460b-be1e-08615801fdfa", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:59.599" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "4679afd9-87f9-460b...</msg>
<status status="PASS" starttime="20220211 15:54:56.289" endtime="20220211 15:54:59.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:59.599" endtime="20220211 15:54:59.599"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:59.678" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:54:59.599" endtime="20220211 15:54:59.678"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:54:59.807" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "ba93ec73-7ec0-49bf-9e8a-b3dbf574b73d", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:54:59.807" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:25 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:54:59.681" endtime="20220211 15:54:59.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:54:59.807" endtime="20220211 15:54:59.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:54:59.807" level="INFO">删除卷2</msg>
<status status="PASS" starttime="20220211 15:54:59.807" endtime="20220211 15:54:59.807"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk2} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:54:59.948" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 78 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:54:59.807" endtime="20220211 15:54:59.948"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:01.376" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "1c5fe4ed-ec94-40dd-aafb-3fc630b1febe", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:01.376" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "1c5fe4ed-ec94-40dd...</msg>
<status status="PASS" starttime="20220211 15:54:59.948" endtime="20220211 15:55:01.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:01.376" endtime="20220211 15:55:01.376"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk2} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:01.501" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 78 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:01.376" endtime="20220211 15:55:01.501"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:01.595" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "bca17051-544a-4df6-b85e-b7d61436aa54", "error": {"code": -42021, "message": "pool(0)/vdisk(78)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:01.595" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:27 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:01.501" endtime="20220211 15:55:01.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:01.595" endtime="20220211 15:55:01.595"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:01.707" level="INFO">curl  -X GET http://127.0.0.1:930 0/p_api/v1/vdisks/78/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:01.595" endtime="20220211 15:55:01.707"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:01.863" level="INFO">{"id": "4f141609-7a6b-480f-9cd9-b0f7e5487937", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:01.863" level="INFO">${output} = {"id": "4f141609-7a6b-480f-9cd9-b0f7e5487937", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:01.707" endtime="20220211 15:55:01.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:01.863" endtime="20220211 15:55:01.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:01.863" endtime="20220211 15:55:01.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:01.863" level="INFO">删除vdisk2</msg>
<status status="PASS" starttime="20220211 15:55:01.863" endtime="20220211 15:55:01.863"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:02.005" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:01.863" endtime="20220211 15:55:02.005"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:04.217" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:29 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "917b384c-fd7f-4f97-8944-1d42f584b036", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:04.217" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:29 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "917b384c-fd7f-4f97...</msg>
<status status="PASS" starttime="20220211 15:55:02.005" endtime="20220211 15:55:04.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:04.218" endtime="20220211 15:55:04.219"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:04.292" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:04.220" endtime="20220211 15:55:04.293"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:04.345" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "6e5cb4fc-afe9-44c3-a8db-0dacfa652d3b", "error": {"code": -44208, "message": "pool(0)/vdisk(78) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:04.345" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:04.293" endtime="20220211 15:55:04.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.345"/>
</kw>
<status status="PASS" starttime="20220211 15:54:42.107" endtime="20220211 15:55:04.345"/>
</test>
<test id="s1-s4-t13" name="终止卷拷贝">
<kw name="Log" library="BuiltIn">
<arg>复用启动卷拷贝用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:04.345" level="INFO">复用启动卷拷贝用例</msg>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.345"/>
</kw>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.345"/>
</test>
<test id="s1-s4-t14" name="链接克隆卷rebase">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:04.345" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.345"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk1_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:55:04.345" level="INFO">${vdisk1_name} = TssY</msg>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.345"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk1_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:04.516" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "TssY", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:04.516"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:06.173" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a02f658e-8acd-11ec-ad4a-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:06.173" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a02f658e-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:55:04.516" endtime="20220211 15:55:06.173"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:06.189" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:55:06.189" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:55:06.173" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:06.189" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:06.189" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:06.189" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:06.189" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:55:06.189" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:06.189" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:06.189" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.189"/>
</kw>
<msg timestamp="20220211 15:55:06.189" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:55:04.516" endtime="20220211 15:55:06.189"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:06.314" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:06.189" endtime="20220211 15:55:06.314"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:06.737" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "89584c3c-11a8-43da-b193-01e232e801e1", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "Name": "TssY", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:06.737" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "89584c3c-11a8-43da...</msg>
<status status="PASS" starttime="20220211 15:55:06.314" endtime="20220211 15:55:06.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk1_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:06.737" endtime="20220211 15:55:06.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:06.737" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:55:06.737" endtime="20220211 15:55:06.737"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:06.925" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test", "Deduplication":  false, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc ", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:55:06.737" endtime="20220211 15:55:06.925"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:08.001" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "f908ebe6-ca46-4cff-8587-0befe014a8a7", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:08.001" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 140

{"id": "f908ebe6-ca46-4cff...</msg>
<status status="PASS" starttime="20220211 15:55:06.925" endtime="20220211 15:55:08.001"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:08.377" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<msg timestamp="20220211 15:55:08.377" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}}[</msg>
<status status="PASS" starttime="20220211 15:55:08.001" endtime="20220211 15:55:08.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:08.378" endtime="20220211 15:55:08.378"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:08.379" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"}</msg>
<status status="PASS" starttime="20220211 15:55:08.378" endtime="20220211 15:55:08.379"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:08.379" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:08.379" endtime="20220211 15:55:08.379"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:08.380" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:08.382" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol0-test"} </msg>
<msg timestamp="20220211 15:55:08.382" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:08.382" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'vol0-test'}</msg>
<status status="PASS" starttime="20220211 15:55:08.380" endtime="20220211 15:55:08.382"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:08.383" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:55:08.382" endtime="20220211 15:55:08.383"/>
</kw>
<msg timestamp="20220211 15:55:08.383" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:55:06.925" endtime="20220211 15:55:08.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:08.384" level="INFO">创建快照</msg>
<status status="PASS" starttime="20220211 15:55:08.384" endtime="20220211 15:55:08.384"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk}, "ReadOnly":true,"Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:08.596" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":77, "ReadOnly":true," Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/ v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:55:08.385" endtime="20220211 15:55:08.596"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:09.511" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "f40fde44-e26c-4f2e-a359-ce2f5856c273", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1, "Name": "snapshot1"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:09.511" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "f40fde44-e26c-4f2e...</msg>
<status status="PASS" starttime="20220211 15:55:08.596" endtime="20220211 15:55:09.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:09.512" endtime="20220211 15:55:09.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建vdisk2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:09.513" level="INFO">创建vdisk2</msg>
<status status="PASS" starttime="20220211 15:55:09.513" endtime="20220211 15:55:09.513"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk2_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:55:09.514" level="INFO">${vdisk2_name} = 1mNI</msg>
<status status="PASS" starttime="20220211 15:55:09.514" endtime="20220211 15:55:09.514"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddVdisk","params":{"PoolId":0,"Name":"${vdisk2_name}","Description":"desc","TierInfoList":[{"Tier":"SATA_HDD","Capacity":1000,"EcType":"CARBON_2B"}]}}' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:09.731" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddVdisk","params":{"PoolId":0,"Name":"1mNI","Description":"desc", "TierInfoList":[{"Tier":"SATA_HDD","Capacity":1000,"EcType":"CARBON_2B"}]}}' htt p://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:55:09.515" endtime="20220211 15:55:09.731"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk2}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:11.455" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:37 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a34263d4-8acd-11ec-91ca-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:11.455" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:37 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a34263d4-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:55:09.731" endtime="20220211 15:55:11.455"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:11.486" level="INFO">result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<msg timestamp="20220211 15:55:11.486" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 78}}[</msg>
<status status="PASS" starttime="20220211 15:55:11.455" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:11.486" level="INFO">${output} = {"PoolId": 0, "VdiskId": 78}</msg>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:11.486" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:11.486" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:11.486" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 78} </msg>
<msg timestamp="20220211 15:55:11.486" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:11.486" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 78}</msg>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:11.486" level="INFO">${id} = 78</msg>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.486"/>
</kw>
<msg timestamp="20220211 15:55:11.486" level="INFO">${vdisk2} = 78</msg>
<status status="PASS" starttime="20220211 15:55:09.731" endtime="20220211 15:55:11.486"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:11.611" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:11.486" endtime="20220211 15:55:11.611"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:12.024" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:37 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 337

{"id": "314e8f5a-6728-49fc-9d5e-651b0753ba14", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "Name": "1mNI", "Description": "desc", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "CARBON_2B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:12.024" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:37 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 337

{"id": "314e8f5a-6728-49fc...</msg>
<status status="PASS" starttime="20220211 15:55:11.611" endtime="20220211 15:55:12.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk2_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:12.024" endtime="20220211 15:55:12.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:12.024" level="INFO">创建卷2</msg>
<status status="PASS" starttime="20220211 15:55:12.024" endtime="20220211 15:55:12.024"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-test2", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk2}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:12.259" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-test2", "Deduplication":  false, "PoolId": 0,"VdiskId": 78, "Compress": false, "Description": "vdisk1 des c", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:55:12.024" endtime="20220211 15:55:12.259"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid2}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:14.645" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 141

{"id": "1739e652-2c0b-479a-839f-2220a9ffa02b", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:14.645" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 141

{"id": "1739e652-2c0b-479a...</msg>
<status status="PASS" starttime="20220211 15:55:12.260" endtime="20220211 15:55:14.645"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:14.692" level="INFO">result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}}[</msg>
<msg timestamp="20220211 15:55:14.693" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}}[</msg>
<status status="PASS" starttime="20220211 15:55:14.645" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:14.693" level="INFO">${output} = {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"}</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:14.693" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:14.693" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:14.693" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "Name": "vol0-test2"} </msg>
<msg timestamp="20220211 15:55:14.693" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:14.693" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 78, 'VolumeId': 0, 'Name': 'vol0-test2'}</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:14.693" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<msg timestamp="20220211 15:55:14.693" level="INFO">${volid2} = 0</msg>
<status status="PASS" starttime="20220211 15:55:12.260" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>启动卷拷贝</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:14.693" level="INFO">启动卷拷贝</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:14.693"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"StartVolumeCopy","params":{"PoolId":0,"VdiskId":${vdisk2},"SourcePoolId":0,"SourceVdiskId":${vdisk},"SourceVolumeId":${volid},"CopyType":0}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:15.361" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"StartVolumeCopy","params":{"PoolId":0,"VdiskId":78,"SourcePoolId":0 ,"SourceVdiskId":77,"SourceVolumeId":0,"CopyType":0}}' http://127.0.0.1:9300/p_a pi/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:14.693" endtime="20220211 15:55:15.361"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:18.226" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 180

{"id": "0fc228f4-3ee1-42da-8019-76c446e5089e", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "SourcePoolId": 0, "SourceVdiskId": 77, "SourceVolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:18.226" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 180

{"id": "0fc228f4-3ee1-42da...</msg>
<status status="PASS" starttime="20220211 15:55:15.362" endtime="20220211 15:55:18.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:18.226" endtime="20220211 15:55:18.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>终止卷拷贝</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:18.226" level="INFO">终止卷拷贝</msg>
<status status="PASS" starttime="20220211 15:55:18.226" endtime="20220211 15:55:18.226"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"StopVolumeCopy","params":{"PoolId":0,"VdiskId":${vdisk2}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:18.554" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"StopVolumeCopy","params":{"PoolId":0,"VdiskId":78}}' http://127.0.0 .1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:18.226" endtime="20220211 15:55:18.554"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:18.738" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 179

{"jsonrpc": "2.0", "id": "94a848a9-b57f-46c9-bc14-eda960d93254", "error": {"code": -45644, "message": "stop pool(0)/vdisk(78)/volume(0) copy failed for volume already stop copy"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:18.738" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 179

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:18.554" endtime="20220211 15:55:18.738"/>
</kw>
<kw name="Comment" library="BuiltIn">
<arg>判断终止卷拷贝TODO</arg>
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<status status="PASS" starttime="20220211 15:55:18.739" endtime="20220211 15:55:18.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建快照2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:18.739" level="INFO">创建快照2</msg>
<status status="PASS" starttime="20220211 15:55:18.739" endtime="20220211 15:55:18.740"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":${vdisk2}, "ReadOnly":true,"Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}/snapshots</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:18.950" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2 .0","method":"AddSnapshot","params":{"PoolId": 0,"VdiskId":78, "ReadOnly":true," Name":"snapshot1","Description":"snapshot1 desc"}}' http://127.0.0.1:9300/p_api/ v1/volumes/0/snapshots</msg>
<status status="PASS" starttime="20220211 15:55:18.740" endtime="20220211 15:55:18.950"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:20.200" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "3c1778ab-48bf-463d-be15-a1a2baf2b03e", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "SnapshotId": 1, "Name": "snapshot1"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:20.200" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:45 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 157

{"id": "3c1778ab-48bf-463d...</msg>
<status status="PASS" starttime="20220211 15:55:18.951" endtime="20220211 15:55:20.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:20.200" endtime="20220211 15:55:20.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建vdisk3用于创建链接克隆卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:20.200" level="INFO">创建vdisk3用于创建链接克隆卷</msg>
<status status="PASS" starttime="20220211 15:55:20.200" endtime="20220211 15:55:20.200"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk3_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:55:20.200" level="INFO">${vdisk3_name} = JRh3</msg>
<status status="PASS" starttime="20220211 15:55:20.200" endtime="20220211 15:55:20.200"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk3_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:20.422" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "JRh3", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:55:20.200" endtime="20220211 15:55:20.422"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk3}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:21.967" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:47 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a9a22822-8acd-11ec-9acd-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:21.967" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:47 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "a9a22822-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:55:20.422" endtime="20220211 15:55:21.967"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:21.997" level="INFO">result": {"PoolId": 0, "VdiskId": 79}}[</msg>
<msg timestamp="20220211 15:55:21.997" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 79}}[</msg>
<status status="PASS" starttime="20220211 15:55:21.968" endtime="20220211 15:55:21.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:21.998" endtime="20220211 15:55:21.998"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:21.999" level="INFO">${output} = {"PoolId": 0, "VdiskId": 79}</msg>
<status status="PASS" starttime="20220211 15:55:21.998" endtime="20220211 15:55:21.999"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:21.999" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:21.999" endtime="20220211 15:55:21.999"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:21.999" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:22.001" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 79} </msg>
<msg timestamp="20220211 15:55:22.001" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:22.001" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 79}</msg>
<status status="PASS" starttime="20220211 15:55:21.999" endtime="20220211 15:55:22.001"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:22.002" level="INFO">${id} = 79</msg>
<status status="PASS" starttime="20220211 15:55:22.001" endtime="20220211 15:55:22.002"/>
</kw>
<msg timestamp="20220211 15:55:22.002" level="INFO">${vdisk3} = 79</msg>
<status status="PASS" starttime="20220211 15:55:20.422" endtime="20220211 15:55:22.002"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk3}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:22.118" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/vdisks/79?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:22.003" endtime="20220211 15:55:22.118"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:22.675" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:48 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "28409776-7951-4188-8a50-7e986870d3b7", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 79, "Name": "JRh3", "Description": "", "HealthStatus": 3, "CfgType": "THIN", "TotalCapacity": 1000, "RunningNodeId": 0, "TierInfoList": [{"Tier": "SATA_HDD", "TierTotalCapacity": 1000, "TierUsedCapacity": 0, "EcType": "RAID1_1D0B"}]}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:22.675" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:48 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 334

{"id": "28409776-7951-4188...</msg>
<status status="PASS" starttime="20220211 15:55:22.119" endtime="20220211 15:55:22.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${vdisk3_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:22.676" endtime="20220211 15:55:22.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>基于快照创建链接克隆卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:22.677" level="INFO">基于快照创建链接克隆卷</msg>
<status status="PASS" starttime="20220211 15:55:22.677" endtime="20220211 15:55:22.677"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol0-lc", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk3}, "Compress": false, "Description": "vdisk1 desc", "Size": '100', "Template":{"TemplatePoolId":0,"TemplateVdiskId":${vdisk},"TemplateVolumeId":${volid},"TemplateSnapshotId":1}}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:22.857" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol0-lc", "Deduplication": fa lse, "PoolId": 0,"VdiskId": 79, "Compress": false, "Description": "vdisk1 desc",  "Size": '100', "Template":{"TemplatePoolId":0,"TemplateVdiskId":77,"TemplateVol umeId":0,"TemplateSnapshotId":1}}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:55:22.677" endtime="20220211 15:55:22.857"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid3}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:26.135" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 138

{"id": "0eb8cb43-cfe0-42b6-b9ff-b92e1b4031a2", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:26.135" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 138

{"id": "0eb8cb43-cfe0-42b6...</msg>
<status status="PASS" starttime="20220211 15:55:22.858" endtime="20220211 15:55:26.135"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:26.206" level="INFO">result": {"PoolId": 0, "VdiskId": 79, "VolumeId": 0, "Name": "vol0-lc"}}[</msg>
<msg timestamp="20220211 15:55:26.206" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 79, "VolumeId": 0, "Name": "vol0-lc"}}[</msg>
<status status="PASS" starttime="20220211 15:55:26.135" endtime="20220211 15:55:26.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:26.206" endtime="20220211 15:55:26.206"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:26.206" level="INFO">${output} = {"PoolId": 0, "VdiskId": 79, "VolumeId": 0, "Name": "vol0-lc"}</msg>
<status status="PASS" starttime="20220211 15:55:26.206" endtime="20220211 15:55:26.206"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:26.206" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:26.206" endtime="20220211 15:55:26.206"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:26.206" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:26.214" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 79, "VolumeId": 0, "Name": "vol0-lc"} </msg>
<msg timestamp="20220211 15:55:26.214" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:26.214" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 79, 'VolumeId': 0, 'Name': 'vol0-lc'}</msg>
<status status="PASS" starttime="20220211 15:55:26.206" endtime="20220211 15:55:26.214"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:26.214" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:55:26.214" endtime="20220211 15:55:26.214"/>
</kw>
<msg timestamp="20220211 15:55:26.214" level="INFO">${volid3} = 0</msg>
<status status="PASS" starttime="20220211 15:55:22.858" endtime="20220211 15:55:26.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>将链接克隆卷rebase到快照2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:26.218" level="INFO">将链接克隆卷rebase到快照2</msg>
<status status="PASS" starttime="20220211 15:55:26.218" endtime="20220211 15:55:26.218"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2.0","method":"RebaseVolume","params":{"PoolId":0,"VdiskId":${vdisk3},"ParentPoolId":0,"ParentVdiskId":${vdisk2},"ParentVolumeId":${volid2},"ParentSnapshotId":1}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid3}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:26.349" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","jsonrpc":"2. 0","method":"RebaseVolume","params":{"PoolId":0,"VdiskId":79,"ParentPoolId":0,"P arentVdiskId":78,"ParentVolumeId":0,"ParentSnapshotId":1}}' http://127.0.0.1:930 0/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:26.218" endtime="20220211 15:55:26.349"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:29.449" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:55 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 203

{"id": "8e5d7e4e-f8e0-46ca-b2f0-6fd743bc0fd9", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 79, "VolumeId": 0, "ParentPoolId": 0, "ParentVdiskId": 78, "ParentVolumeId": 0, "ParentSnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:29.449" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:55 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 203

{"id": "8e5d7e4e-f8e0-46ca...</msg>
<status status="PASS" starttime="20220211 15:55:26.350" endtime="20220211 15:55:29.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:29.450" endtime="20220211 15:55:29.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除链接克隆卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:29.452" level="INFO">删除链接克隆卷</msg>
<status status="PASS" starttime="20220211 15:55:29.451" endtime="20220211 15:55:29.452"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk3} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid3}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:29.590" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 79 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:29.453" endtime="20220211 15:55:29.590"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:32.611" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:58 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "ff426924-d696-4d62-85b9-aabe296ecf49", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 79, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:32.611" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:00:58 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "ff426924-d696-4d62...</msg>
<status status="PASS" starttime="20220211 15:55:29.591" endtime="20220211 15:55:32.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:32.611" endtime="20220211 15:55:32.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除链接克隆vdisk3</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:32.611" level="INFO">删除链接克隆vdisk3</msg>
<status status="PASS" starttime="20220211 15:55:32.611" endtime="20220211 15:55:32.611"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk3}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:32.738" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/79?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:32.611" endtime="20220211 15:55:32.739"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:35.696" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "b053f6a9-09b6-4dfb-8e48-56ecfe85acba", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 79}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:35.696" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "b053f6a9-09b6-4dfb...</msg>
<status status="PASS" starttime="20220211 15:55:32.739" endtime="20220211 15:55:35.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:35.697" endtime="20220211 15:55:35.697"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk3}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:35.831" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/79?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:35.698" endtime="20220211 15:55:35.831"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:35.891" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "13f4fa3b-6e1d-4175-9064-7f694f89338b", "error": {"code": -44208, "message": "pool(0)/vdisk(79) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:35.891" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:01 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:35.832" endtime="20220211 15:55:35.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:35.892" endtime="20220211 15:55:35.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除快照</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:35.893" level="INFO">删除快照</msg>
<status status="PASS" starttime="20220211 15:55:35.893" endtime="20220211 15:55:35.893"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:36.028" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": 77}}' h ttp://127.0.0.1:9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:55:35.894" endtime="20220211 15:55:36.029"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:37.789" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "4cdff564-49ca-4233-94a3-ecaa52084659", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "SnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:37.789" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:03 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "4cdff564-49ca-4233...</msg>
<status status="PASS" starttime="20220211 15:55:36.029" endtime="20220211 15:55:37.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:37.790" endtime="20220211 15:55:37.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除快照2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:37.791" level="INFO">删除快照2</msg>
<status status="PASS" starttime="20220211 15:55:37.790" endtime="20220211 15:55:37.791"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": ${vdisk2}}}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}/snapshots/1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:37.926" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteSnapshot", "params": {"PoolId": 0,"VdiskId": 78}}' h ttp://127.0.0.1:9300/p_api/v1/volumes/0/snapshots/1</msg>
<status status="PASS" starttime="20220211 15:55:37.791" endtime="20220211 15:55:37.926"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:40.256" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:06 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "187aa303-dda8-4c70-b290-13a6baadf0bf", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0, "SnapshotId": 1}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:40.256" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:06 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 136

{"id": "187aa303-dda8-4c70...</msg>
<status status="PASS" starttime="20220211 15:55:37.927" endtime="20220211 15:55:40.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:40.257" endtime="20220211 15:55:40.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:40.258" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:55:40.257" endtime="20220211 15:55:40.258"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:40.378" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:40.258" endtime="20220211 15:55:40.379"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:41.687" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "7bc03c4e-ca65-4f7a-ae8e-7d2159d67c2a", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:41.687" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "7bc03c4e-ca65-4f7a...</msg>
<status status="PASS" starttime="20220211 15:55:40.379" endtime="20220211 15:55:41.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:41.687" endtime="20220211 15:55:41.687"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:41.853" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:41.687" endtime="20220211 15:55:41.853"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:41.916" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "574b111a-41dc-4efe-9ada-062be5a8e267", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:41.916" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:07 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:41.853" endtime="20220211 15:55:41.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:41.916" endtime="20220211 15:55:41.916"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:42.026" level="INFO">curl  -X GET http://127.0.0.1:930 0/p_api/v1/vdisks/77/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:41.916" endtime="20220211 15:55:42.026"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:42.088" level="INFO">{"id": "dd8d167d-4367-436f-a46e-e016c144587a", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:42.089" level="INFO">${output} = {"id": "dd8d167d-4367-436f-a46e-e016c144587a", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:42.026" endtime="20220211 15:55:42.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:42.090" endtime="20220211 15:55:42.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:42.091" endtime="20220211 15:55:42.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:42.091" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:55:42.091" endtime="20220211 15:55:42.091"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:42.245" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:42.091" endtime="20220211 15:55:42.245"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:46.328" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "e608844a-ea33-4942-b7e2-27c16da73fc2", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:46.328" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "e608844a-ea33-4942...</msg>
<status status="PASS" starttime="20220211 15:55:42.246" endtime="20220211 15:55:46.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:46.329" endtime="20220211 15:55:46.329"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:46.455" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:46.330" endtime="20220211 15:55:46.455"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:46.530" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "d4e7c156-d557-4af2-b13a-59c6eaeb77c4", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:46.530" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:12 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:46.456" endtime="20220211 15:55:46.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:46.531" endtime="20220211 15:55:46.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:46.532" level="INFO">删除卷2</msg>
<status status="PASS" starttime="20220211 15:55:46.532" endtime="20220211 15:55:46.532"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk2} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:46.652" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 78 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:46.533" endtime="20220211 15:55:46.653"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:48.228" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:13 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "4c283409-94f7-43dc-acdf-24847935dd2a", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:48.228" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:13 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "4c283409-94f7-43dc...</msg>
<status status="PASS" starttime="20220211 15:55:46.653" endtime="20220211 15:55:48.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:48.229" endtime="20220211 15:55:48.230"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk2} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid2}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:48.361" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 78 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:55:48.231" endtime="20220211 15:55:48.361"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:48.414" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "3cfd744d-3b05-4908-8f5f-44f60f54679c", "error": {"code": -42021, "message": "pool(0)/vdisk(78)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:48.414" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:14 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:48.362" endtime="20220211 15:55:48.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:48.414" endtime="20220211 15:55:48.414"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl \ -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}/volumes?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:48.529" level="INFO">curl  -X GET http://127.0.0.1:930 0/p_api/v1/vdisks/78/volumes?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:48.414" endtime="20220211 15:55:48.529"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:48.771" level="INFO">{"id": "b8c74a14-faf0-4387-868a-41b5613261ff", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:48.771" level="INFO">${output} = {"id": "b8c74a14-faf0-4387-868a-41b5613261ff", "jsonrpc": "2.0", "result": {"VolumeInfos": [], "PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:48.529" endtime="20220211 15:55:48.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:48.771" endtime="20220211 15:55:48.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>vol0-test</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:48.771" endtime="20220211 15:55:48.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:48.771" level="INFO">删除vdisk2</msg>
<status status="PASS" starttime="20220211 15:55:48.771" endtime="20220211 15:55:48.771"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:48.896" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:48.771" endtime="20220211 15:55:48.896"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:51.698" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7f31e932-cb4a-4d20-a4ff-46f43e25474b", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 78}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:51.698" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "7f31e932-cb4a-4d20...</msg>
<status status="PASS" starttime="20220211 15:55:48.896" endtime="20220211 15:55:51.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:51.698" endtime="20220211 15:55:51.698"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk2}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:51.761" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/78?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:51.698" endtime="20220211 15:55:51.762"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:51.841" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "c54d41f7-171b-44d8-bb22-d726cabd0469", "error": {"code": -44208, "message": "pool(0)/vdisk(78) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:51.841" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:17 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:55:51.762" endtime="20220211 15:55:51.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:51.843" endtime="20220211 15:55:51.843"/>
</kw>
<status status="PASS" starttime="20220211 15:55:04.345" endtime="20220211 15:55:51.845"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:55:51.849" endtime="20220211 15:55:51.850"/>
</kw>
<status status="PASS" starttime="20220211 15:55:51.848" endtime="20220211 15:55:51.850"/>
</kw>
<status status="PASS" starttime="20220211 15:53:51.925" endtime="20220211 15:55:51.851"/>
</suite>
<suite id="s1-s5" name="5.Qos相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\5.Qos相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:55:51.858" endtime="20220211 15:55:51.874"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:55:51.874" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:55:53.606" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 07:59:18 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:51.874" endtime="20220211 15:55:53.606"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:55:53.606" endtime="20220211 15:55:53.606"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:55:53.606" endtime="20220211 15:55:53.607"/>
</kw>
<status status="PASS" starttime="20220211 15:55:51.858" endtime="20220211 15:55:53.607"/>
</kw>
<test id="s1-s5-t1" name="创建Qos策略">
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:53.608" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:55:53.607" endtime="20220211 15:55:53.608"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:55:53.608" level="INFO">${vdisk_name} = IlA7</msg>
<status status="PASS" starttime="20220211 15:55:53.608" endtime="20220211 15:55:53.608"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:53.731" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "IlA7", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:55:53.609" endtime="20220211 15:55:53.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建Vdisk成功</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:53.731" level="INFO">创建Vdisk成功</msg>
<status status="PASS" starttime="20220211 15:55:53.731" endtime="20220211 15:55:53.731"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:55.448" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "bd8bbdb2-8acd-11ec-8768-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:55:55.448" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "bd8bbdb2-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:55:53.731" endtime="20220211 15:55:55.448"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:55:55.492" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:55:55.492" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:55:55.448" endtime="20220211 15:55:55.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:55.492" endtime="20220211 15:55:55.492"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:55:55.493" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:55:55.492" endtime="20220211 15:55:55.493"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:55.493" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:55:55.493" endtime="20220211 15:55:55.493"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:55:55.493" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:55.494" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:55:55.494" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:55:55.494" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:55:55.493" endtime="20220211 15:55:55.495"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:55:55.495" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:55:55.495" endtime="20220211 15:55:55.495"/>
</kw>
<msg timestamp="20220211 15:55:55.495" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:55:53.731" endtime="20220211 15:55:55.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:55.496" level="INFO">创建QoS策略</msg>
<status status="PASS" starttime="20220211 15:55:55.496" endtime="20220211 15:55:55.496"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${qos_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:55:55.496" level="INFO">${qos_name} = NlZW</msg>
<status status="PASS" starttime="20220211 15:55:55.496" endtime="20220211 15:55:55.496"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":"2.0", "method":"AddQoSPolicy", "params": {"PolicyName":"${qos_name}", "IOPSLimit":3000, "IOPSReservation":0, "BandwidthLimit":0, "BandwidthReservation":0, "Priority":2 }}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:55.659" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":" 2.0", "method":"AddQoSPolicy", "params": {"PolicyName":"NlZW", "IOPSLimit":3000,  "IOPSReservation":0, "BandwidthLimit":0, "BandwidthReservation":0, "Priority":2  }}' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:55:55.497" endtime="20220211 15:55:55.659"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:55.734" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "NlZW"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:55.734" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:21 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:55:55.659" endtime="20220211 15:55:55.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:55.735" endtime="20220211 15:55:55.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>vdisk绑定QOS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:55.736" level="INFO">vdisk绑定QOS策略</msg>
<status status="PASS" starttime="20220211 15:55:55.736" endtime="20220211 15:55:55.736"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "BindQoSPolicy", "params": {"PolicyName": "${qos_name}", "PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:55.856" level="INFO">curl -i -H "Content-Type: applica tion/json" -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "BindQoSPolicy", "params": {"PolicyName": "NlZW", "PoolId": 0,  "VdiskId": 77}}' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:55:55.737" endtime="20220211 15:55:55.856"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:56.451" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:22 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "PolicyName": "NlZW"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:56.451" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:22 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 126

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:55:55.857" endtime="20220211 15:55:56.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:56.451" endtime="20220211 15:55:56.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>查询指定vdisk的QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:56.451" level="INFO">查询指定vdisk的QoS策略</msg>
<status status="PASS" starttime="20220211 15:55:56.451" endtime="20220211 15:55:56.451"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetQoSPolicyByVdiskId", "params": {"PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:56.597" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetQoSPolicyByVdiskId", "params": {"PoolId": 0, "VdiskId": 77} }' http://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:55:56.451" endtime="20220211 15:55:56.597"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:56.895" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:22 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "NlZW", "Description": "", "IOPSLimit": 3000, "IOPSReservation": 0, "BandwidthLimit": 0, "BandwidthReservation": 0, "Priority": 2, "PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:56.896" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:22 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:55:56.597" endtime="20220211 15:55:56.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:56.896" endtime="20220211 15:55:56.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>vdisk解除绑定QoS</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:56.898" level="INFO">vdisk解除绑定QoS</msg>
<status status="PASS" starttime="20220211 15:55:56.898" endtime="20220211 15:55:56.898"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H 'Content-Type: application/json' -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "UnbindQoSPolicy", "params": {"PoolId": 0, "VdiskId": ${vdisk}}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:57.014" level="INFO">curl -i -H 'Content-Type: applica tion/json' -X PUT -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "UnbindQoSPolicy", "params": {"PoolId": 0, "VdiskId": 77}}' htt p://127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:55:56.899" endtime="20220211 15:55:57.014"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:57.747" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:57.747" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:55:57.014" endtime="20220211 15:55:57.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:57.748" endtime="20220211 15:55:57.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除QoS策略</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:57.749" level="INFO">删除QoS策略</msg>
<status status="PASS" starttime="20220211 15:55:57.749" endtime="20220211 15:55:57.750"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteQoSPolicy", "params": {"PolicyName": "${qos_name}"}}' http://127.0.0.1:9300/p_api/v1/qos</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:57.873" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc ": "2.0", "method": "DeleteQoSPolicy", "params": {"PolicyName": "NlZW"}}' http:/ /127.0.0.1:9300/p_api/v1/qos</msg>
<status status="PASS" starttime="20220211 15:55:57.750" endtime="20220211 15:55:57.873"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:55:58.263" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"PolicyName": "NlZW"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:55:58.263" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:23 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 98

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:55:57.873" endtime="20220211 15:55:58.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${qos_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:55:58.264" endtime="20220211 15:55:58.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:55:58.265" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:55:58.265" endtime="20220211 15:55:58.265"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:55:58.342" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:55:58.265" endtime="20220211 15:55:58.342"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:01.039" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:26 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "bb8ab81d-34bf-4eaf-83e0-39db1c8cae2a", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:01.039" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:26 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "bb8ab81d-34bf-4eaf...</msg>
<status status="PASS" starttime="20220211 15:55:58.343" endtime="20220211 15:56:01.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:01.039" endtime="20220211 15:56:01.039"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:01.166" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:56:01.039" endtime="20220211 15:56:01.166"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:26 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "cf1ebb33-c395-4dc3-9128-d2eb8214c2c0", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:01.198" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:26 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:01.166" endtime="20220211 15:56:01.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:55:53.607" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t2" name="删除qos策略">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t3" name="绑定qos策略">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t4" name="解绑qos策略">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t5" name="查询单个qos策略">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t6" name="查询所有qos策略">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<test id="s1-s5-t7" name="查询qos策略绑定的vdisk信息">
<kw name="Log" library="BuiltIn">
<arg>复用创建qos策略用例</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:01.198" level="INFO">复用创建qos策略用例</msg>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.198" endtime="20220211 15:56:01.198"/>
</kw>
<status status="PASS" starttime="20220211 15:55:51.858" endtime="20220211 15:56:01.198"/>
</suite>
<suite id="s1-s6" name="6.Iscsi相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\6.iscsi相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:56:01.213" endtime="20220211 15:56:01.213"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:56:01.213" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:56:02.976" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 08:01:18 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:01.213" endtime="20220211 15:56:02.976"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:56:02.977" endtime="20220211 15:56:02.978"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:56:02.978" endtime="20220211 15:56:02.979"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.213" endtime="20220211 15:56:02.979"/>
</kw>
<test id="s1-s6-t1" name="启动器组配置">
<kw name="Log" library="BuiltIn">
<arg>step1</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:02.987" level="INFO">step1</msg>
<status status="PASS" starttime="20220211 15:56:02.986" endtime="20220211 15:56:02.987"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups/2</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:03.116" level="INFO">curl -i -X DELETE http://127.0.0. 1:9300/p_api/v1/iscsi/initiatorgroups/2</msg>
<status status="PASS" starttime="20220211 15:56:02.989" endtime="20220211 15:56:03.116"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:04.026" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:29 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 68

{"id": "12e1d60e-d16a-40c3-be8c-be122fa52fd5", "result": {"Tag": 2}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:03.116" endtime="20220211 15:56:04.026"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"AddInitiatorGroup","jsonrpc":"2.0","params":{"Tag":2,"Initiators":["ANY"],"Netmasks":["ANY"]}}' http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:04.166" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"Ad dInitiatorGroup","jsonrpc":"2.0","params":{"Tag":2,"Initiators":["ANY"],"Netmask s":["ANY"]}}' http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</msg>
<status status="PASS" starttime="20220211 15:56:04.027" endtime="20220211 15:56:04.166"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:05.171" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 86

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"Tag": 2}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:05.171" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:30 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 86

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:56:04.167" endtime="20220211 15:56:05.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": {"Tag": 2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:05.171" endtime="20220211 15:56:05.171"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:05.296" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/iscsi/initiatorgroups</msg>
<status status="PASS" starttime="20220211 15:56:05.171" endtime="20220211 15:56:05.296"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:05.548" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 155

{"jsonrpc": "2.0", "id": "9949c5f9-7d32-496a-9ac4-a05fdd95e685", "result": [{"config_attributes": {"Tag": 2, "Initiators": ["ANY"], "Netmasks": ["ANY"]}}]}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:05.548" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:31 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 155

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:05.296" endtime="20220211 15:56:05.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>{"Tag": 2, "Initiators": ["ANY"], "Netmasks": ["ANY"]}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:05.548" endtime="20220211 15:56:05.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>step2</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:05.548" level="INFO">step2</msg>
<status status="PASS" starttime="20220211 15:56:05.548" endtime="20220211 15:56:05.548"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups/2</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:05.673" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/iscsi/initiatorgroups/2</msg>
<status status="PASS" starttime="20220211 15:56:05.548" endtime="20220211 15:56:05.673"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:06.471" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 68

{"id": "2ae740ea-4834-468f-98e3-82949f4351f3", "result": {"Tag": 2}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:06.471" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 68

{"id": "2ae740ea-4834-468f-...</msg>
<status status="PASS" starttime="20220211 15:56:05.673" endtime="20220211 15:56:06.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": {"Tag": 2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:06.471" endtime="20220211 15:56:06.471"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:06.597" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/iscsi/initiatorgroups</msg>
<status status="PASS" starttime="20220211 15:56:06.471" endtime="20220211 15:56:06.597"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:06.740" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"jsonrpc": "2.0", "id": "95e74c79-dc26-4381-9f5e-732c59ffeb3d", "result": []}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:06.740" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 78

{"jsonrpc": "2.0", "id": "9...</msg>
<status status="PASS" starttime="20220211 15:56:06.597" endtime="20220211 15:56:06.740"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>{"Tag": 2, "Initiators": ["ANY"], "Netmasks": ["ANY"]}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:06.740" endtime="20220211 15:56:06.740"/>
</kw>
<doc>前置条件：
PAPI正常运行、POS正常运行

操作步骤：

1、删除tag2启动器组后重新创建，预期创建成功，可以获取到配置

2、删除tag2，预期成功，不能获取到配置</doc>
<status status="PASS" starttime="20220211 15:56:02.980" endtime="20220211 15:56:06.740"/>
</test>
<test id="s1-s6-t2" name="target配置">
<kw name="Log" library="BuiltIn">
<arg>创建启动器组</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:06.740" level="INFO">创建启动器组</msg>
<status status="PASS" starttime="20220211 15:56:06.740" endtime="20220211 15:56:06.740"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups/2</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:06.884" level="INFO">curl -i -X DELETE http://127.0.0. 1:9300/p_api/v1/iscsi/initiatorgroups/2</msg>
<status status="PASS" starttime="20220211 15:56:06.740" endtime="20220211 15:56:06.884"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:06.999" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:32 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 234

{"jsonrpc": "2.0", "id": "36e78910-6d79-4c54-8b54-c207ebe23345", "error": {"code": -45714, "message": "Invalid params,the InitiatorGroup does not exist: the corresponding configuration item does not exist in the configuration view "}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:06.884" endtime="20220211 15:56:06.999"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"AddInitiatorGroup","jsonrpc":"2.0","params":{"Tag":2,"Initiators":["ANY"],"Netmasks":["ANY"]}}' http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:07.152" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"Ad dInitiatorGroup","jsonrpc":"2.0","params":{"Tag":2,"Initiators":["ANY"],"Netmask s":["ANY"]}}' http://127.0.0.1:9300/p_api/v1/iscsi/initiatorgroups</msg>
<status status="PASS" starttime="20220211 15:56:06.999" endtime="20220211 15:56:07.152"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:07.915" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 86

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"Tag": 2}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:07.915" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:33 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 86

{"id": "5fb21aae-251a-11e9-...</msg>
<status status="PASS" starttime="20220211 15:56:07.153" endtime="20220211 15:56:07.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": {"Tag": 2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:07.915" endtime="20220211 15:56:07.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:07.915" level="INFO">创建vdisk</msg>
<status status="PASS" starttime="20220211 15:56:07.915" endtime="20220211 15:56:07.915"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${vdisk_name}</var>
<arg>4</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220211 15:56:07.915" level="INFO">${vdisk_name} = V3pE</msg>
<status status="PASS" starttime="20220211 15:56:07.915" endtime="20220211 15:56:07.915"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "${vdisk_name}", "TierInfoList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } }' http://127.0.0.1:9300/p_api/v1/vdisks</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:08.040" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc" : "2.0", "method": "AddVdisk", "params": { "PoolId": 0, "Name": "V3pE", "TierInf oList": [ { "Tier": "SATA_HDD", "Capacity": 1000, "EcType": "RAID1_1D0B" } ] } } ' http://127.0.0.1:9300/p_api/v1/vdisks</msg>
<status status="PASS" starttime="20220211 15:56:07.915" endtime="20220211 15:56:08.040"/>
</kw>
<kw name="add_vdisk_parse_vdiskid" library="rgstor">
<var>${vdisk}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:56:09.938" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "c612f806-8acd-11ec-84e2-0242ac1ffd17", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:56:09.938" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:35 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "c612f806-8acd-11ec...</msg>
<status status="PASS" starttime="20220211 15:56:08.040" endtime="20220211 15:56:09.938"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:56:09.953" level="INFO">result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<msg timestamp="20220211 15:56:09.953" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77}}[</msg>
<status status="PASS" starttime="20220211 15:56:09.938" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:09.953" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:56:09.953" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77}</msg>
<status status="PASS" starttime="20220211 15:56:09.953" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:09.953" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:09.953" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:56:09.953" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:56:09.953" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77} </msg>
<msg timestamp="20220211 15:56:09.953" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:56:09.953" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77}</msg>
<status status="PASS" starttime="20220211 15:56:09.953" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VdiskId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:56:09.953" level="INFO">${id} = 77</msg>
<status status="PASS" starttime="20220211 15:56:09.953" endtime="20220211 15:56:09.953"/>
</kw>
<msg timestamp="20220211 15:56:09.953" level="INFO">${vdisk} = 77</msg>
<status status="PASS" starttime="20220211 15:56:08.040" endtime="20220211 15:56:09.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:09.969" level="INFO">创建卷</msg>
<status status="PASS" starttime="20220211 15:56:09.969" endtime="20220211 15:56:09.969"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "method": "AddVolume" ,"params": {"Name": "vol-test", "Deduplication": false, "PoolId": 0,"VdiskId": ${vdisk}, "Compress": false, "Description": "vdisk1 desc", "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:10.094" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"jsonrpc": "2.0", "id": "5fb21aae-251a-11e9-ab14-d663bd8 73d93", "method": "AddVolume" ,"params": {"Name": "vol-test", "Deduplication": f alse, "PoolId": 0,"VdiskId": 77, "Compress": false, "Description": "vdisk1 desc" , "Size": '100'}}' http://127.0.0.1:9300/p_api/v1/volumes</msg>
<status status="PASS" starttime="20220211 15:56:09.969" endtime="20220211 15:56:10.094"/>
</kw>
<kw name="add_volume_parse_volid" library="rgstor">
<var>${volid}</var>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>"jsonrpc": "2.0", "</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:56:11.099" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 139

{"id": "1ace281e-994f-4c45-8c49-12e122807003", "jsonrpc": "2.0", "</msg>
<msg timestamp="20220211 15:56:11.099" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:36 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 139

{"id": "1ace281e-994f-4c45...</msg>
<status status="PASS" starttime="20220211 15:56:10.094" endtime="20220211 15:56:11.099"/>
</kw>
<kw name="Read Until" library="SSHLibrary">
<var>${output}</var>
<arg>}[</arg>
<doc>Consumes and returns the server output until ``expected`` is encountered.</doc>
<msg timestamp="20220211 15:56:11.130" level="INFO">result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol-test"}}[</msg>
<msg timestamp="20220211 15:56:11.130" level="INFO">${output} = result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol-test"}}[</msg>
<status status="PASS" starttime="20220211 15:56:11.099" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Get Substring" library="String">
<var>${output}</var>
<arg>${output}</arg>
<arg>9</arg>
<arg>-2</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220211 15:56:11.130" level="INFO">${output} = {"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol-test"}</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:11.130" level="INFO">root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${ret_result}</var>
<arg>${output}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20220211 15:56:11.130" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:56:11.130" level="INFO">To JSON using : content={"PoolId": 0, "VdiskId": 77, "VolumeId": 0, "Name": "vol-test"} </msg>
<msg timestamp="20220211 15:56:11.130" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20220211 15:56:11.130" level="INFO">${ret_result} = {'PoolId': 0, 'VdiskId': 77, 'VolumeId': 0, 'Name': 'vol-test'}</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${ret_result}</arg>
<arg>VolumeId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220211 15:56:11.130" level="INFO">${id} = 0</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<msg timestamp="20220211 15:56:11.130" level="INFO">${volid} = 0</msg>
<status status="PASS" starttime="20220211 15:56:10.094" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>创建target</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:11.130" level="INFO">创建target</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.130"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"ConstructTargetNode","jsonrpc":"2.0","params":{"Name":"iqn.2019-06.io.ruijie:robottest","Luns":[{"PoolId":0,"VdiskId":${vdisk},"VolumeId":${volid}}],"IgTags":[{"IgTag":2}]}}' http://127.0.0.1:9300/p_api/v1/iscsi/targets</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:11.271" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id":"5fb21aae-251a-11e9-ab14-d663bd873d93","method":"Co nstructTargetNode","jsonrpc":"2.0","params":{"Name":"iqn.2019-06.io.ruijie:robot test","Luns":[{"PoolId":0,"VdiskId":77,"VolumeId":0}],"IgTags":[{"IgTag":2}]}}'  http://127.0.0.1:9300/p_api/v1/iscsi/targets</msg>
<status status="PASS" starttime="20220211 15:56:11.130" endtime="20220211 15:56:11.271"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:12.604" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:38 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "result": {"Name": "iqn.2019-06.io.ruijie:robottest"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:12.604" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:38 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "5fb21aae-251a-11e9...</msg>
<status status="PASS" starttime="20220211 15:56:11.271" endtime="20220211 15:56:12.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:12.604" endtime="20220211 15:56:12.604"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/iscsi/targets</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:12.666" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/iscsi/targets</msg>
<status status="PASS" starttime="20220211 15:56:12.604" endtime="20220211 15:56:12.666"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:14.030" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"jsonrpc": "2.0", "id": "1e782019-fbd7-4408-91bd-525b969ebf73", "result": [{"config_attributes": {"Name": "iqn.2019-06.io.ruijie:robottest", "Luns": [{"PoolId": 0, "VdiskId": 77, "VolumeId": 0}], "IgTags": [{"IgTag": 2}], "EncryptAlgor": "emei"}}]}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:14.030" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:39 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 249

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:12.666" endtime="20220211 15:56:14.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>robottest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:14.030" endtime="20220211 15:56:14.030"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:14.170" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</msg>
<status status="PASS" starttime="20220211 15:56:14.030" endtime="20220211 15:56:14.170"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:14.487" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 229

{"id": "d34defb3-4414-4a74-9fa8-a1932ed88d5b", "result": {"config_attributes": {"Name": "iqn.2019-06.io.ruijie:robottest", "Luns": [{"PoolId": 0, "VdiskId": 77, "VolumeId": 0}], "IgTags": [{"IgTag": 2}], "EncryptAlgor": "emei"}}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:14.487" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:40 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 229

{"id": "d34defb3-4414-4a74...</msg>
<status status="PASS" starttime="20220211 15:56:14.170" endtime="20220211 15:56:14.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>robottest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:14.487" endtime="20220211 15:56:14.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除target</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:14.488" level="INFO">删除target</msg>
<status status="PASS" starttime="20220211 15:56:14.488" endtime="20220211 15:56:14.488"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE http://127.0.0.1:9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:14.626" level="INFO">curl -i -X DELETE http://127.0.0. 1:9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</msg>
<status status="PASS" starttime="20220211 15:56:14.488" endtime="20220211 15:56:14.626"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:15.376" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:41 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 101

{"id": "e2de1ce3-b243-4a58-978e-ffeed2f6ccce", "result": {"Name": "iqn.2019-06.io.ruijie:robottest"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:15.376" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:41 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 101

{"id": "e2de1ce3-b243-4a58...</msg>
<status status="PASS" starttime="20220211 15:56:14.626" endtime="20220211 15:56:15.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:15.377" endtime="20220211 15:56:15.377"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET \ http://127.0.0.1:9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:15.497" level="INFO">curl -i -X GET  http://127.0.0.1: 9300/p_api/v1/iscsi/targets/iqn.2019-06.io.ruijie:robottest</msg>
<status status="PASS" starttime="20220211 15:56:15.378" endtime="20220211 15:56:15.497"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:16.655" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:42 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 230

{"jsonrpc": "2.0", "id": "adfa04bf-c876-4e59-8950-06b45275ca72", "error": {"code": -45714, "message": "Invalid params,the TargetNode does not exist: the corresponding configuration item does not exist in the configuration view "}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:16.655" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:42 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 230

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:15.498" endtime="20220211 15:56:16.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:16.655" endtime="20220211 15:56:16.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除卷</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:16.655" level="INFO">删除卷</msg>
<status status="PASS" starttime="20220211 15:56:16.655" endtime="20220211 15:56:16.655"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "DeleteVolume", "params": { \ "PoolId": 0,"VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:16.853" level="INFO">curl -i -H "Content-Type: applica tion/json" -X DELETE -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrp c": "2.0", "method": "DeleteVolume", "params": {  "PoolId": 0,"VdiskId": 77 }}'  http://127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:56:16.655" endtime="20220211 15:56:16.853"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:18.085" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "a63130a2-72bd-4d98-aaf3-16a7d61c1e63", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77, "VolumeId": 0}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:18.085" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:43 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 119

{"id": "a63130a2-72bd-4d98...</msg>
<status status="PASS" starttime="20220211 15:56:16.853" endtime="20220211 15:56:18.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:18.085" endtime="20220211 15:56:18.085"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": ${vdisk} }}' http://127.0.0.1:9300/p_api/v1/volumes/${volid}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:18.242" level="INFO">curl -i -H "Content-Type: applica tion/json" -X GET -d '{ "id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetVolume", "params": { "PoolId": 0, "VdiskId": 77 }}' http:/ /127.0.0.1:9300/p_api/v1/volumes/0</msg>
<status status="PASS" starttime="20220211 15:56:18.085" endtime="20220211 15:56:18.242"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:18.273" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "5f78d46e-221e-4323-bb85-893615cfd859", "error": {"code": -42021, "message": "pool(0)/vdisk(77)/volume(0) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:18.273" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:44 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 144

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:18.242" endtime="20220211 15:56:18.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:18.273" endtime="20220211 15:56:18.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>删除vdisk</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:18.273" level="INFO">删除vdisk</msg>
<status status="PASS" starttime="20220211 15:56:18.273" endtime="20220211 15:56:18.273"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X DELETE \ http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:18.404" level="INFO">curl -i -X DELETE  http://127.0.0 .1:9300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:56:18.273" endtime="20220211 15:56:18.404"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:20.647" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:46 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "529d0249-3b27-40d5-a4a5-8ef8bb23c46f", "jsonrpc": "2.0", "result": {"PoolId": 0, "VdiskId": 77}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:20.647" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:46 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 104

{"id": "529d0249-3b27-40d5...</msg>
<status status="PASS" starttime="20220211 15:56:18.404" endtime="20220211 15:56:20.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>result</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:20.647" endtime="20220211 15:56:20.647"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -X GET http://127.0.0.1:9300/p_api/v1/vdisks/${vdisk}?poolid=0</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:21.181" level="INFO">curl -i -X GET http://127.0.0.1:9 300/p_api/v1/vdisks/77?poolid=0</msg>
<status status="PASS" starttime="20220211 15:56:20.647" endtime="20220211 15:56:21.181"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:21.181" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:46 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "cdfd9295-28a5-4872-a961-a4cf6e5fd497", "error": {"code": -44208, "message": "pool(0)/vdisk(77) not exists"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:21.181" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:46 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 134

{"jsonrpc": "2.0", "id": "...</msg>
<status status="PASS" starttime="20220211 15:56:21.181" endtime="20220211 15:56:21.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:21.181" endtime="20220211 15:56:21.181"/>
</kw>
<status status="PASS" starttime="20220211 15:56:06.740" endtime="20220211 15:56:21.181"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:56:21.197" endtime="20220211 15:56:21.197"/>
</kw>
<status status="PASS" starttime="20220211 15:56:21.181" endtime="20220211 15:56:21.197"/>
</kw>
<status status="PASS" starttime="20220211 15:56:01.213" endtime="20220211 15:56:21.197"/>
</suite>
<suite id="s1-s7" name="9.亚健康相关接口测试" source="C:\Users\lilongyu\Desktop\autotest\papiserver\9.亚健康相关接口测试.robot">
<kw name="rgstorsetup" library="rgstor" type="SETUP">
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=conf</arg>
<arg>port=${port}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20220211 15:56:21.213" endtime="20220211 15:56:21.213"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${user}</arg>
<arg>${passwd}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20220211 15:56:21.213" level="INFO">Logging into '172.24.21.7:9622' as 'root'.</msg>
<msg timestamp="20220211 15:56:22.937" level="INFO">Read output: System is booting up. See pam_nologin(8)
Last login: Fri Feb 11 08:01:27 2022 from 172.25.2.244
[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<status status="PASS" starttime="20220211 15:56:21.213" endtime="20220211 15:56:22.937"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>prompt=#</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:56:22.937" endtime="20220211 15:56:22.937"/>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<arg>timeout=60</arg>
<doc>Update the `configuration` of the current connection.</doc>
<status status="PASS" starttime="20220211 15:56:22.937" endtime="20220211 15:56:22.937"/>
</kw>
<status status="PASS" starttime="20220211 15:56:21.213" endtime="20220211 15:56:22.937"/>
</kw>
<test id="s1-s7-t1" name="开启亚健康功能">
<kw name="Log" library="BuiltIn">
<arg>开启亚健康功能</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:22.937" level="INFO">开启亚健康功能</msg>
<status status="PASS" starttime="20220211 15:56:22.937" endtime="20220211 15:56:22.937"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetSubhStatus", "params": {"enable": "true"}}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:23.203" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetSubhStatus", "params": {"enable": "true"}}' http://127.0.0 .1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:22.937" endtime="20220211 15:56:23.203"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:23.313" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "746b9832-04b8-43a0-b213-3856bd150656", "result": "0"}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:23.313" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "7...</msg>
<status status="PASS" starttime="20220211 15:56:23.203" endtime="20220211 15:56:23.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": "0"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:23.313" endtime="20220211 15:56:23.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>关闭亚健康功能</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:23.313" level="INFO">关闭亚健康功能</msg>
<status status="PASS" starttime="20220211 15:56:23.313" endtime="20220211 15:56:23.313"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetSubhStatus", "params": {"enable": "false"}}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:23.626" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetSubhStatus", "params": {"enable": "false"}}' http://127.0. 0.1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:23.313" endtime="20220211 15:56:23.626"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:23.910" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "07f052f0-a77c-4835-81a8-346e03697a3e", "result": "0"}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:23.910" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:49 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "0...</msg>
<status status="PASS" starttime="20220211 15:56:23.626" endtime="20220211 15:56:23.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": "0"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:23.910" endtime="20220211 15:56:23.910"/>
</kw>
<status status="PASS" starttime="20220211 15:56:22.937" endtime="20220211 15:56:23.910"/>
</test>
<test id="s1-s7-t2" name="查询亚健康功能状态">
<kw name="Log" library="BuiltIn">
<arg>开启亚健康功能</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:23.910" level="INFO">开启亚健康功能</msg>
<status status="PASS" starttime="20220211 15:56:23.910" endtime="20220211 15:56:23.910"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetSubhStatus", "params": {"enable": "true"}}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:24.067" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetSubhStatus", "params": {"enable": "true"}}' http://127.0.0 .1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:23.910" endtime="20220211 15:56:24.067"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:24.474" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "4ffaa0ef-045f-4628-ae4f-89119c5b1a2d", "result": "0"}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:24.474" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "4...</msg>
<status status="PASS" starttime="20220211 15:56:24.067" endtime="20220211 15:56:24.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": "0"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:24.474" endtime="20220211 15:56:24.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>查询亚健康功能状态</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:24.474" level="INFO">查询亚健康功能状态</msg>
<status status="PASS" starttime="20220211 15:56:24.474" endtime="20220211 15:56:24.474"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H 'Content-Type: application/json' -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetSubhStatus"}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:24.615" level="INFO">curl -i -H 'Content-Type: applica tion/json' -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetSubhStatus"}' http://127.0.0.1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:24.474" endtime="20220211 15:56:24.615"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:24.881" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 94

{"jsonrpc": "2.0", "id": "e8aa5d76-9614-44cc-b0c7-2a4f25d50d11", "result": {"enable": "true"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:24.881" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 94

{"jsonrpc": "2.0", "id": "e...</msg>
<status status="PASS" starttime="20220211 15:56:24.615" endtime="20220211 15:56:24.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": {"enable": "true"}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:24.881" endtime="20220211 15:56:24.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>关闭亚健康功能</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:24.881" level="INFO">关闭亚健康功能</msg>
<status status="PASS" starttime="20220211 15:56:24.881" endtime="20220211 15:56:24.881"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H "Content-Type: application/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "SetSubhStatus", "params": {"enable": "false"}}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:25.023" level="INFO">curl -i -H "Content-Type: applica tion/json" -X POST -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "SetSubhStatus", "params": {"enable": "false"}}' http://127.0. 0.1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:24.881" endtime="20220211 15:56:25.023"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:25.228" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "b5f2ad87-e384-4f5a-89d6-f0fa777f8496", "result": "0"}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:25.229" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:50 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 79

{"jsonrpc": "2.0", "id": "b...</msg>
<status status="PASS" starttime="20220211 15:56:25.023" endtime="20220211 15:56:25.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": "0"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:25.231" endtime="20220211 15:56:25.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>查询亚健康功能状态</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220211 15:56:25.234" level="INFO">查询亚健康功能状态</msg>
<status status="PASS" starttime="20220211 15:56:25.233" endtime="20220211 15:56:25.234"/>
</kw>
<kw name="Write" library="SSHLibrary">
<arg>curl -i -H 'Content-Type: application/json' -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc": "2.0", "method": "GetSubhStatus"}' http://127.0.0.1:9300/p_api/v1/subhealth</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20220211 15:56:25.415" level="INFO">curl -i -H 'Content-Type: applica tion/json' -X GET -d '{"id": "5fb21aae-251a-11e9-ab14-d663bd873d93", "jsonrpc":  "2.0", "method": "GetSubhStatus"}' http://127.0.0.1:9300/p_api/v1/subhealth</msg>
<status status="PASS" starttime="20220211 15:56:25.236" endtime="20220211 15:56:25.415"/>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<var>${output}</var>
<doc>Consumes and returns the server output until the prompt is found.</doc>
<msg timestamp="20220211 15:56:25.587" level="INFO">HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 95

{"jsonrpc": "2.0", "id": "fb008d66-453d-4abe-978a-dbcef144e1ee", "result": {"enable": "false"}}[root@f1d02e46-768d-4a01-aa6b-60e7deaff71b ~]#</msg>
<msg timestamp="20220211 15:56:25.587" level="INFO">${output} = HTTP/1.1 200 OK
Server: emei/1.4.6
Date: Fri, 11 Feb 2022 00:01:51 GMT
Connection: keep-alive
content-type: application/json;charset=utf-8
Content-Length: 95

{"jsonrpc": "2.0", "id": "f...</msg>
<status status="PASS" starttime="20220211 15:56:25.415" endtime="20220211 15:56:25.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"result": {"enable": "false"}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220211 15:56:25.587" endtime="20220211 15:56:25.587"/>
</kw>
<status status="PASS" starttime="20220211 15:56:23.910" endtime="20220211 15:56:25.587"/>
</test>
<kw name="rgstorteardown" library="rgstor" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20220211 15:56:25.587" endtime="20220211 15:56:25.587"/>
</kw>
<status status="PASS" starttime="20220211 15:56:25.587" endtime="20220211 15:56:25.587"/>
</kw>
<status status="PASS" starttime="20220211 15:56:21.197" endtime="20220211 15:56:25.587"/>
</suite>
<status status="PASS" starttime="20220211 15:53:04.408" endtime="20220211 15:56:25.602"/>
</suite>
<statistics>
<total>
<stat pass="42" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="42" fail="0" skip="0" id="s1" name="Papiserver">Papiserver</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="1.Pool相关接口测试">Papiserver.1.Pool相关接口测试</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="2.Vdisk相关接口测试">Papiserver.2.Vdisk相关接口测试</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="3.Journal相关接口测试">Papiserver.3.Journal相关接口测试</stat>
<stat pass="14" fail="0" skip="0" id="s1-s4" name="4.卷相关接口测试">Papiserver.4.卷相关接口测试</stat>
<stat pass="7" fail="0" skip="0" id="s1-s5" name="5.Qos相关接口测试">Papiserver.5.Qos相关接口测试</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="6.Iscsi相关接口测试">Papiserver.6.Iscsi相关接口测试</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="9.亚健康相关接口测试">Papiserver.9.亚健康相关接口测试</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220211 15:53:04.376" level="ERROR">Error in file 'C:\Users\lilongyu\Desktop\autotest\papiserver\__init__.robot' on line 1: 'Test Cases' section is not allowed in suite initialization file.</msg>
<msg timestamp="20220211 15:53:13.463" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:20.182" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:22.032" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:30.851" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:37.688" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:46.811" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:55.703" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:53:57.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:04.305" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:05.482" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:12.741" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:14.555" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:25.976" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:29.036" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:44.171" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:46.418" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:48.601" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:54:50.665" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:06.189" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:08.380" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:11.486" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:14.693" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:21.999" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:26.206" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:55:55.493" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:56:09.953" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20220211 15:56:11.130" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
